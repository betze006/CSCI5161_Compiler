Terminals unused in grammar

   ERROR


State 25 conflicts: 1 shift/reduce
State 130 conflicts: 1 shift/reduce
State 159 conflicts: 1 shift/reduce
State 181 conflicts: 1 shift/reduce
State 182 conflicts: 1 shift/reduce
State 184 conflicts: 2 reduce/reduce
State 187 conflicts: 1 shift/reduce
State 196 conflicts: 1 shift/reduce
State 200 conflicts: 1 shift/reduce
State 219 conflicts: 1 shift/reduce
State 220 conflicts: 1 shift/reduce
State 227 conflicts: 1 shift/reduce
State 233 conflicts: 1 shift/reduce
State 239 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: /* empty */

    2 program: $@1 global_decl_list

    3 global_decl_list: global_decl_list global_decl
    4                 | /* empty */

    5 global_decl: decl_list function_decl
    6            | function_decl

    7 $@2: /* empty */

    8 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE $@2 block MK_RBRACE

    9 $@3: /* empty */

   10 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE $@3 block MK_RBRACE
   11              | type ID MK_LPAREN param_list MK_RPAREN MK_SEMICOLON
   12              | type ID MK_LPAREN MK_RPAREN MK_SEMICOLON

   13 param_list: param_list MK_COMMA param
   14           | param

   15 param: type ID
   16      | struct_type ID
   17      | type ID dim_fn
   18      | struct_type ID dim_fn

   19 dim_fn: MK_LB expr_null MK_RB dimfn1

   20 dimfn1: MK_LB expr MK_RB dimfn1
   21       | /* empty */

   22 expr_null: expr
   23          | /* empty */

   24 block: decl_list stmt_list
   25      | stmt_list
   26      | decl_list
   27      | /* empty */

   28 decl_list: decl_list decl
   29          | decl

   30 decl: type_decl
   31     | var_decl

   32 type_decl: TYPEDEF type id_list MK_SEMICOLON
   33          | TYPEDEF VOID id_list MK_SEMICOLON
   34          | TYPEDEF struct_type id_list MK_SEMICOLON
   35          | struct_type MK_SEMICOLON

   36 var_decl: type init_id_list MK_SEMICOLON
   37         | struct_type id_list MK_SEMICOLON
   38         | ID id_list MK_SEMICOLON

   39 type: INT
   40     | FLOAT
   41     | VOID
   42     | error

   43 struct_type: STRUCT tag

   44 $@4: /* empty */

   45 tag: ID MK_LBRACE $@4 decl_list MK_RBRACE

   46 $@5: /* empty */

   47 tag: MK_LBRACE $@5 decl_list MK_RBRACE

   48 $@6: /* empty */

   49 tag: ID MK_LBRACE $@6 MK_RBRACE

   50 $@7: /* empty */

   51 tag: MK_LBRACE $@7 MK_RBRACE
   52    | ID

   53 id_list: ID
   54        | id_list MK_COMMA ID
   55        | id_list MK_COMMA ID dim_decl
   56        | ID dim_decl

   57 dim_decl: MK_LB cexpr MK_RB
   58         | dim_decl MK_LB cexpr MK_RB

   59 cexpr: cexpr add_op mcexpr
   60      | mcexpr

   61 mcexpr: mcexpr mul_op cfactor
   62       | cfactor

   63 cfactor: CONST
   64        | CONSTF
   65        | MK_LPAREN cexpr MK_RPAREN

   66 init_id_list: init_id
   67             | init_id_list MK_COMMA init_id

   68 init_id: ID
   69        | ID dim_decl
   70        | ID OP_ASSIGN relop_expr

   71 stmt_list: stmt_list stmt
   72          | stmt

   73 $@8: /* empty */

   74 stmt: MK_LBRACE $@8 block MK_RBRACE
   75     | WHILE MK_LPAREN relop_expr_list MK_RPAREN stmt
   76     | FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   77     | IF MK_LPAREN relop_expr MK_RPAREN stmt ELSE stmt
   78     | IF MK_LPAREN relop_expr MK_RPAREN stmt
   79     | function_call
   80     | var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   81     | relop_expr_list MK_SEMICOLON
   82     | MK_SEMICOLON
   83     | RETURN MK_SEMICOLON
   84     | RETURN relop_expr MK_SEMICOLON

   85 function_call: ID MK_LPAREN relop_expr_list MK_RPAREN

   86 assign_expr_list: nonempty_assign_expr_list
   87                 | /* empty */

   88 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr
   89                          | assign_expr

   90 $@9: /* empty */

   91 assign_expr: ID $@9 OP_ASSIGN relop_expr
   92            | relop_expr

   93 relop_expr: relop_term
   94           | relop_expr op_or relop_term

   95 op_or: OP_OR

   96 relop_term: relop_factor
   97           | relop_term op_and relop_factor

   98 op_and: OP_AND

   99 relop_factor: expr
  100             | expr rel_op expr

  101 rel_op: OP_LT
  102       | OP_LE
  103       | OP_GT
  104       | OP_GE
  105       | OP_EQ
  106       | OP_NE

  107 relop_expr_list: nonempty_relop_expr_list
  108                | /* empty */

  109 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr
  110                         | relop_expr

  111 expr: expr add_op term
  112     | term

  113 add_op: OP_PLUS
  114       | OP_MINUS

  115 term: term mul_op factor
  116     | factor

  117 mul_op: OP_TIMES
  118       | OP_DIVIDE

  119 factor: MK_LPAREN relop_expr MK_RPAREN
  120       | OP_NOT MK_LPAREN relop_expr MK_RPAREN
  121       | OP_MINUS MK_LPAREN relop_expr MK_RPAREN
  122       | CONST
  123       | CONSTF
  124       | OP_NOT CONST
  125       | OP_NOT CONSTF
  126       | OP_MINUS CONST
  127       | OP_MINUS CONSTF
  128       | function_call
  129       | OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  130       | OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN
  131       | var_ref
  132       | OP_NOT var_ref
  133       | OP_MINUS var_ref
  134       | CONSTS

  135 var_ref: ID
  136        | var_ref var_ref_dim
  137        | var_ref struct_tail

  138 var_ref_dim: dim
  139            | dim var_ref_dim

  140 dim: MK_LB expr MK_RB

  141 struct_tail: MK_DOT ID


Terminals, with rules where they appear

$end (0) 0
error (256) 42
ID (258) 8 10 11 12 15 16 17 18 38 45 49 52 53 54 55 56 68 69 70 85
    91 129 130 135 141
CONST (259) 63 122 124 126
CONSTS (260) 134
CONSTF (261) 64 123 125 127
VOID (262) 33 41
INT (263) 39
FLOAT (264) 40
IF (265) 77 78
ELSE (266) 77
WHILE (267) 75
FOR (268) 76
STRUCT (269) 43
TYPEDEF (270) 32 33 34
OP_ASSIGN (271) 70 80 91
OP_OR (272) 95
OP_AND (273) 98
OP_NOT (274) 120 124 125 129 132
OP_EQ (275) 105
OP_NE (276) 106
OP_GT (277) 103
OP_LT (278) 101
OP_GE (279) 104
OP_LE (280) 102
OP_PLUS (281) 113
OP_MINUS (282) 114 121 126 127 130 133
OP_TIMES (283) 117
OP_DIVIDE (284) 118
MK_LB (285) 19 20 57 58 140
MK_RB (286) 19 20 57 58 140
MK_LPAREN (287) 8 10 11 12 65 75 76 77 78 85 119 120 121 129 130
MK_RPAREN (288) 8 10 11 12 65 75 76 77 78 85 119 120 121 129 130
MK_LBRACE (289) 8 10 45 47 49 51 74
MK_RBRACE (290) 8 10 45 47 49 51 74
MK_COMMA (291) 13 54 55 67 88 109
MK_SEMICOLON (292) 11 12 32 33 34 35 36 37 38 76 80 81 82 83 84
MK_DOT (293) 141
ERROR (294)
RETURN (295) 83 84


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program (42)
    on left: 2, on right: 0
$@1 (43)
    on left: 1, on right: 2
global_decl_list (44)
    on left: 3 4, on right: 2 3
global_decl (45)
    on left: 5 6, on right: 3
function_decl (46)
    on left: 8 10 11 12, on right: 5 6
$@2 (47)
    on left: 7, on right: 8
$@3 (48)
    on left: 9, on right: 10
param_list (49)
    on left: 13 14, on right: 8 11 13
param (50)
    on left: 15 16 17 18, on right: 13 14
dim_fn (51)
    on left: 19, on right: 17 18
dimfn1 (52)
    on left: 20 21, on right: 19 20
expr_null (53)
    on left: 22 23, on right: 19
block (54)
    on left: 24 25 26 27, on right: 8 10 74
decl_list (55)
    on left: 28 29, on right: 5 24 26 28 45 47
decl (56)
    on left: 30 31, on right: 28 29
type_decl (57)
    on left: 32 33 34 35, on right: 30
var_decl (58)
    on left: 36 37 38, on right: 31
type (59)
    on left: 39 40 41 42, on right: 8 10 11 12 15 17 32 36
struct_type (60)
    on left: 43, on right: 16 18 34 35 37
tag (61)
    on left: 45 47 49 51 52, on right: 43
$@4 (62)
    on left: 44, on right: 45
$@5 (63)
    on left: 46, on right: 47
$@6 (64)
    on left: 48, on right: 49
$@7 (65)
    on left: 50, on right: 51
id_list (66)
    on left: 53 54 55 56, on right: 32 33 34 37 38 54 55
dim_decl (67)
    on left: 57 58, on right: 55 56 58 69
cexpr (68)
    on left: 59 60, on right: 57 58 59 65
mcexpr (69)
    on left: 61 62, on right: 59 60 61
cfactor (70)
    on left: 63 64 65, on right: 61 62
init_id_list (71)
    on left: 66 67, on right: 36 67
init_id (72)
    on left: 68 69 70, on right: 66 67
stmt_list (73)
    on left: 71 72, on right: 24 25 71
stmt (74)
    on left: 74 75 76 77 78 79 80 81 82 83 84, on right: 71 72 75 76
    77 78
$@8 (75)
    on left: 73, on right: 74
function_call (76)
    on left: 85, on right: 79 128
assign_expr_list (77)
    on left: 86 87, on right: 76
nonempty_assign_expr_list (78)
    on left: 88 89, on right: 86 88
assign_expr (79)
    on left: 91 92, on right: 88 89
$@9 (80)
    on left: 90, on right: 91
relop_expr (81)
    on left: 93 94, on right: 70 77 78 80 84 91 92 94 109 110 119 120
    121
op_or (82)
    on left: 95, on right: 94
relop_term (83)
    on left: 96 97, on right: 93 94 97
op_and (84)
    on left: 98, on right: 97
relop_factor (85)
    on left: 99 100, on right: 96 97
rel_op (86)
    on left: 101 102 103 104 105 106, on right: 100
relop_expr_list (87)
    on left: 107 108, on right: 75 76 81 85 129 130
nonempty_relop_expr_list (88)
    on left: 109 110, on right: 107 109
expr (89)
    on left: 111 112, on right: 20 22 99 100 111 140
add_op (90)
    on left: 113 114, on right: 59 111
term (91)
    on left: 115 116, on right: 111 112 115
mul_op (92)
    on left: 117 118, on right: 61 115
factor (93)
    on left: 119 120 121 122 123 124 125 126 127 128 129 130 131 132
    133 134, on right: 115 116
var_ref (94)
    on left: 135 136 137, on right: 80 131 132 133 136 137
var_ref_dim (95)
    on left: 138 139, on right: 136 139
dim (96)
    on left: 140, on right: 138 139
struct_tail (97)
    on left: 141, on right: 137


state 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    2 program: $@1 . global_decl_list

    $default  reduce using rule 4 (global_decl_list)

    global_decl_list  go to state 4


state 3

    0 $accept: program $end .

    $default  accept


state 4

    2 program: $@1 global_decl_list .
    3 global_decl_list: global_decl_list . global_decl

    error    shift, and go to state 5
    ID       shift, and go to state 6
    VOID     shift, and go to state 7
    INT      shift, and go to state 8
    FLOAT    shift, and go to state 9
    STRUCT   shift, and go to state 10
    TYPEDEF  shift, and go to state 11

    $end  reduce using rule 2 (program)

    global_decl    go to state 12
    function_decl  go to state 13
    decl_list      go to state 14
    decl           go to state 15
    type_decl      go to state 16
    var_decl       go to state 17
    type           go to state 18
    struct_type    go to state 19


state 5

   42 type: error .

    $default  reduce using rule 42 (type)


state 6

   38 var_decl: ID . id_list MK_SEMICOLON

    ID  shift, and go to state 20

    id_list  go to state 21


state 7

   41 type: VOID .

    $default  reduce using rule 41 (type)


state 8

   39 type: INT .

    $default  reduce using rule 39 (type)


state 9

   40 type: FLOAT .

    $default  reduce using rule 40 (type)


state 10

   43 struct_type: STRUCT . tag

    ID         shift, and go to state 22
    MK_LBRACE  shift, and go to state 23

    tag  go to state 24


state 11

   32 type_decl: TYPEDEF . type id_list MK_SEMICOLON
   33          | TYPEDEF . VOID id_list MK_SEMICOLON
   34          | TYPEDEF . struct_type id_list MK_SEMICOLON

    error   shift, and go to state 5
    VOID    shift, and go to state 25
    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    STRUCT  shift, and go to state 10

    type         go to state 26
    struct_type  go to state 27


state 12

    3 global_decl_list: global_decl_list global_decl .

    $default  reduce using rule 3 (global_decl_list)


state 13

    6 global_decl: function_decl .

    $default  reduce using rule 6 (global_decl)


state 14

    5 global_decl: decl_list . function_decl
   28 decl_list: decl_list . decl

    error    shift, and go to state 5
    ID       shift, and go to state 6
    VOID     shift, and go to state 7
    INT      shift, and go to state 8
    FLOAT    shift, and go to state 9
    STRUCT   shift, and go to state 10
    TYPEDEF  shift, and go to state 11

    function_decl  go to state 28
    decl           go to state 29
    type_decl      go to state 16
    var_decl       go to state 17
    type           go to state 18
    struct_type    go to state 19


state 15

   29 decl_list: decl .

    $default  reduce using rule 29 (decl_list)


state 16

   30 decl: type_decl .

    $default  reduce using rule 30 (decl)


state 17

   31 decl: var_decl .

    $default  reduce using rule 31 (decl)


state 18

    8 function_decl: type . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE $@2 block MK_RBRACE
   10              | type . ID MK_LPAREN MK_RPAREN MK_LBRACE $@3 block MK_RBRACE
   11              | type . ID MK_LPAREN param_list MK_RPAREN MK_SEMICOLON
   12              | type . ID MK_LPAREN MK_RPAREN MK_SEMICOLON
   36 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 30

    init_id_list  go to state 31
    init_id       go to state 32


state 19

   35 type_decl: struct_type . MK_SEMICOLON
   37 var_decl: struct_type . id_list MK_SEMICOLON

    ID            shift, and go to state 20
    MK_SEMICOLON  shift, and go to state 33

    id_list  go to state 34


state 20

   53 id_list: ID .
   56        | ID . dim_decl

    MK_LB  shift, and go to state 35

    $default  reduce using rule 53 (id_list)

    dim_decl  go to state 36


state 21

   38 var_decl: ID id_list . MK_SEMICOLON
   54 id_list: id_list . MK_COMMA ID
   55        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 37
    MK_SEMICOLON  shift, and go to state 38


state 22

   45 tag: ID . MK_LBRACE $@4 decl_list MK_RBRACE
   49    | ID . MK_LBRACE $@6 MK_RBRACE
   52    | ID .

    MK_LBRACE  shift, and go to state 39

    $default  reduce using rule 52 (tag)


state 23

   47 tag: MK_LBRACE . $@5 decl_list MK_RBRACE
   51    | MK_LBRACE . $@7 MK_RBRACE

    MK_RBRACE  reduce using rule 50 ($@7)
    $default   reduce using rule 46 ($@5)

    $@5  go to state 40
    $@7  go to state 41


state 24

   43 struct_type: STRUCT tag .

    $default  reduce using rule 43 (struct_type)


state 25

   33 type_decl: TYPEDEF VOID . id_list MK_SEMICOLON
   41 type: VOID .

    ID  shift, and go to state 20

    ID  [reduce using rule 41 (type)]

    id_list  go to state 42


state 26

   32 type_decl: TYPEDEF type . id_list MK_SEMICOLON

    ID  shift, and go to state 20

    id_list  go to state 43


state 27

   34 type_decl: TYPEDEF struct_type . id_list MK_SEMICOLON

    ID  shift, and go to state 20

    id_list  go to state 44


state 28

    5 global_decl: decl_list function_decl .

    $default  reduce using rule 5 (global_decl)


state 29

   28 decl_list: decl_list decl .

    $default  reduce using rule 28 (decl_list)


state 30

    8 function_decl: type ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE $@2 block MK_RBRACE
   10              | type ID . MK_LPAREN MK_RPAREN MK_LBRACE $@3 block MK_RBRACE
   11              | type ID . MK_LPAREN param_list MK_RPAREN MK_SEMICOLON
   12              | type ID . MK_LPAREN MK_RPAREN MK_SEMICOLON
   68 init_id: ID .
   69        | ID . dim_decl
   70        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 45
    MK_LB      shift, and go to state 35
    MK_LPAREN  shift, and go to state 46

    $default  reduce using rule 68 (init_id)

    dim_decl  go to state 47


state 31

   36 var_decl: type init_id_list . MK_SEMICOLON
   67 init_id_list: init_id_list . MK_COMMA init_id

    MK_COMMA      shift, and go to state 48
    MK_SEMICOLON  shift, and go to state 49


state 32

   66 init_id_list: init_id .

    $default  reduce using rule 66 (init_id_list)


state 33

   35 type_decl: struct_type MK_SEMICOLON .

    $default  reduce using rule 35 (type_decl)


state 34

   37 var_decl: struct_type id_list . MK_SEMICOLON
   54 id_list: id_list . MK_COMMA ID
   55        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 37
    MK_SEMICOLON  shift, and go to state 50


state 35

   57 dim_decl: MK_LB . cexpr MK_RB

    CONST      shift, and go to state 51
    CONSTF     shift, and go to state 52
    MK_LPAREN  shift, and go to state 53

    cexpr    go to state 54
    mcexpr   go to state 55
    cfactor  go to state 56


state 36

   56 id_list: ID dim_decl .
   58 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 57

    $default  reduce using rule 56 (id_list)


state 37

   54 id_list: id_list MK_COMMA . ID
   55        | id_list MK_COMMA . ID dim_decl

    ID  shift, and go to state 58


state 38

   38 var_decl: ID id_list MK_SEMICOLON .

    $default  reduce using rule 38 (var_decl)


state 39

   45 tag: ID MK_LBRACE . $@4 decl_list MK_RBRACE
   49    | ID MK_LBRACE . $@6 MK_RBRACE

    MK_RBRACE  reduce using rule 48 ($@6)
    $default   reduce using rule 44 ($@4)

    $@4  go to state 59
    $@6  go to state 60


state 40

   47 tag: MK_LBRACE $@5 . decl_list MK_RBRACE

    error    shift, and go to state 5
    ID       shift, and go to state 6
    VOID     shift, and go to state 7
    INT      shift, and go to state 8
    FLOAT    shift, and go to state 9
    STRUCT   shift, and go to state 10
    TYPEDEF  shift, and go to state 11

    decl_list    go to state 61
    decl         go to state 15
    type_decl    go to state 16
    var_decl     go to state 17
    type         go to state 62
    struct_type  go to state 19


state 41

   51 tag: MK_LBRACE $@7 . MK_RBRACE

    MK_RBRACE  shift, and go to state 63


state 42

   33 type_decl: TYPEDEF VOID id_list . MK_SEMICOLON
   54 id_list: id_list . MK_COMMA ID
   55        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 37
    MK_SEMICOLON  shift, and go to state 64


state 43

   32 type_decl: TYPEDEF type id_list . MK_SEMICOLON
   54 id_list: id_list . MK_COMMA ID
   55        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 37
    MK_SEMICOLON  shift, and go to state 65


state 44

   34 type_decl: TYPEDEF struct_type id_list . MK_SEMICOLON
   54 id_list: id_list . MK_COMMA ID
   55        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 37
    MK_SEMICOLON  shift, and go to state 66


state 45

   70 init_id: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    relop_expr     go to state 75
    relop_term     go to state 76
    relop_factor   go to state 77
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


state 46

    8 function_decl: type ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE $@2 block MK_RBRACE
   10              | type ID MK_LPAREN . MK_RPAREN MK_LBRACE $@3 block MK_RBRACE
   11              | type ID MK_LPAREN . param_list MK_RPAREN MK_SEMICOLON
   12              | type ID MK_LPAREN . MK_RPAREN MK_SEMICOLON

    error      shift, and go to state 5
    VOID       shift, and go to state 7
    INT        shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRUCT     shift, and go to state 10
    MK_RPAREN  shift, and go to state 82

    param_list   go to state 83
    param        go to state 84
    type         go to state 85
    struct_type  go to state 86


state 47

   58 dim_decl: dim_decl . MK_LB cexpr MK_RB
   69 init_id: ID dim_decl .

    MK_LB  shift, and go to state 57

    $default  reduce using rule 69 (init_id)


state 48

   67 init_id_list: init_id_list MK_COMMA . init_id

    ID  shift, and go to state 87

    init_id  go to state 88


state 49

   36 var_decl: type init_id_list MK_SEMICOLON .

    $default  reduce using rule 36 (var_decl)


state 50

   37 var_decl: struct_type id_list MK_SEMICOLON .

    $default  reduce using rule 37 (var_decl)


state 51

   63 cfactor: CONST .

    $default  reduce using rule 63 (cfactor)


state 52

   64 cfactor: CONSTF .

    $default  reduce using rule 64 (cfactor)


state 53

   65 cfactor: MK_LPAREN . cexpr MK_RPAREN

    CONST      shift, and go to state 51
    CONSTF     shift, and go to state 52
    MK_LPAREN  shift, and go to state 53

    cexpr    go to state 89
    mcexpr   go to state 55
    cfactor  go to state 56


state 54

   57 dim_decl: MK_LB cexpr . MK_RB
   59 cexpr: cexpr . add_op mcexpr

    OP_PLUS   shift, and go to state 90
    OP_MINUS  shift, and go to state 91
    MK_RB     shift, and go to state 92

    add_op  go to state 93


state 55

   60 cexpr: mcexpr .
   61 mcexpr: mcexpr . mul_op cfactor

    OP_TIMES   shift, and go to state 94
    OP_DIVIDE  shift, and go to state 95

    $default  reduce using rule 60 (cexpr)

    mul_op  go to state 96


state 56

   62 mcexpr: cfactor .

    $default  reduce using rule 62 (mcexpr)


state 57

   58 dim_decl: dim_decl MK_LB . cexpr MK_RB

    CONST      shift, and go to state 51
    CONSTF     shift, and go to state 52
    MK_LPAREN  shift, and go to state 53

    cexpr    go to state 97
    mcexpr   go to state 55
    cfactor  go to state 56


state 58

   54 id_list: id_list MK_COMMA ID .
   55        | id_list MK_COMMA ID . dim_decl

    MK_LB  shift, and go to state 35

    $default  reduce using rule 54 (id_list)

    dim_decl  go to state 98


state 59

   45 tag: ID MK_LBRACE $@4 . decl_list MK_RBRACE

    error    shift, and go to state 5
    ID       shift, and go to state 6
    VOID     shift, and go to state 7
    INT      shift, and go to state 8
    FLOAT    shift, and go to state 9
    STRUCT   shift, and go to state 10
    TYPEDEF  shift, and go to state 11

    decl_list    go to state 99
    decl         go to state 15
    type_decl    go to state 16
    var_decl     go to state 17
    type         go to state 62
    struct_type  go to state 19


state 60

   49 tag: ID MK_LBRACE $@6 . MK_RBRACE

    MK_RBRACE  shift, and go to state 100


state 61

   28 decl_list: decl_list . decl
   47 tag: MK_LBRACE $@5 decl_list . MK_RBRACE

    error      shift, and go to state 5
    ID         shift, and go to state 6
    VOID       shift, and go to state 7
    INT        shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRUCT     shift, and go to state 10
    TYPEDEF    shift, and go to state 11
    MK_RBRACE  shift, and go to state 101

    decl         go to state 29
    type_decl    go to state 16
    var_decl     go to state 17
    type         go to state 62
    struct_type  go to state 19


state 62

   36 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 87

    init_id_list  go to state 31
    init_id       go to state 32


state 63

   51 tag: MK_LBRACE $@7 MK_RBRACE .

    $default  reduce using rule 51 (tag)


state 64

   33 type_decl: TYPEDEF VOID id_list MK_SEMICOLON .

    $default  reduce using rule 33 (type_decl)


state 65

   32 type_decl: TYPEDEF type id_list MK_SEMICOLON .

    $default  reduce using rule 32 (type_decl)


state 66

   34 type_decl: TYPEDEF struct_type id_list MK_SEMICOLON .

    $default  reduce using rule 34 (type_decl)


state 67

   85 function_call: ID . MK_LPAREN relop_expr_list MK_RPAREN
  135 var_ref: ID .

    MK_LPAREN  shift, and go to state 102

    $default  reduce using rule 135 (var_ref)


state 68

  122 factor: CONST .

    $default  reduce using rule 122 (factor)


state 69

  134 factor: CONSTS .

    $default  reduce using rule 134 (factor)


state 70

  123 factor: CONSTF .

    $default  reduce using rule 123 (factor)


state 71

  120 factor: OP_NOT . MK_LPAREN relop_expr MK_RPAREN
  124       | OP_NOT . CONST
  125       | OP_NOT . CONSTF
  129       | OP_NOT . ID MK_LPAREN relop_expr_list MK_RPAREN
  132       | OP_NOT . var_ref

    ID         shift, and go to state 103
    CONST      shift, and go to state 104
    CONSTF     shift, and go to state 105
    MK_LPAREN  shift, and go to state 106

    var_ref  go to state 107


state 72

  121 factor: OP_MINUS . MK_LPAREN relop_expr MK_RPAREN
  126       | OP_MINUS . CONST
  127       | OP_MINUS . CONSTF
  130       | OP_MINUS . ID MK_LPAREN relop_expr_list MK_RPAREN
  133       | OP_MINUS . var_ref

    ID         shift, and go to state 108
    CONST      shift, and go to state 109
    CONSTF     shift, and go to state 110
    MK_LPAREN  shift, and go to state 111

    var_ref  go to state 112


state 73

  119 factor: MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    relop_expr     go to state 113
    relop_term     go to state 76
    relop_factor   go to state 77
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


state 74

  128 factor: function_call .

    $default  reduce using rule 128 (factor)


state 75

   70 init_id: ID OP_ASSIGN relop_expr .
   94 relop_expr: relop_expr . op_or relop_term

    OP_OR  shift, and go to state 114

    $default  reduce using rule 70 (init_id)

    op_or  go to state 115


state 76

   93 relop_expr: relop_term .
   97 relop_term: relop_term . op_and relop_factor

    OP_AND  shift, and go to state 116

    $default  reduce using rule 93 (relop_expr)

    op_and  go to state 117


state 77

   96 relop_term: relop_factor .

    $default  reduce using rule 96 (relop_term)


state 78

   99 relop_factor: expr .
  100             | expr . rel_op expr
  111 expr: expr . add_op term

    OP_EQ     shift, and go to state 118
    OP_NE     shift, and go to state 119
    OP_GT     shift, and go to state 120
    OP_LT     shift, and go to state 121
    OP_GE     shift, and go to state 122
    OP_LE     shift, and go to state 123
    OP_PLUS   shift, and go to state 90
    OP_MINUS  shift, and go to state 91

    $default  reduce using rule 99 (relop_factor)

    rel_op  go to state 124
    add_op  go to state 125


state 79

  112 expr: term .
  115 term: term . mul_op factor

    OP_TIMES   shift, and go to state 94
    OP_DIVIDE  shift, and go to state 95

    $default  reduce using rule 112 (expr)

    mul_op  go to state 126


state 80

  116 term: factor .

    $default  reduce using rule 116 (term)


state 81

  131 factor: var_ref .
  136 var_ref: var_ref . var_ref_dim
  137        | var_ref . struct_tail

    MK_LB   shift, and go to state 127
    MK_DOT  shift, and go to state 128

    $default  reduce using rule 131 (factor)

    var_ref_dim  go to state 129
    dim          go to state 130
    struct_tail  go to state 131


state 82

   10 function_decl: type ID MK_LPAREN MK_RPAREN . MK_LBRACE $@3 block MK_RBRACE
   12              | type ID MK_LPAREN MK_RPAREN . MK_SEMICOLON

    MK_LBRACE     shift, and go to state 132
    MK_SEMICOLON  shift, and go to state 133


state 83

    8 function_decl: type ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE $@2 block MK_RBRACE
   11              | type ID MK_LPAREN param_list . MK_RPAREN MK_SEMICOLON
   13 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 134
    MK_COMMA   shift, and go to state 135


state 84

   14 param_list: param .

    $default  reduce using rule 14 (param_list)


state 85

   15 param: type . ID
   17      | type . ID dim_fn

    ID  shift, and go to state 136


state 86

   16 param: struct_type . ID
   18      | struct_type . ID dim_fn

    ID  shift, and go to state 137


state 87

   68 init_id: ID .
   69        | ID . dim_decl
   70        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 45
    MK_LB      shift, and go to state 35

    $default  reduce using rule 68 (init_id)

    dim_decl  go to state 47


state 88

   67 init_id_list: init_id_list MK_COMMA init_id .

    $default  reduce using rule 67 (init_id_list)


state 89

   59 cexpr: cexpr . add_op mcexpr
   65 cfactor: MK_LPAREN cexpr . MK_RPAREN

    OP_PLUS    shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_RPAREN  shift, and go to state 138

    add_op  go to state 93


state 90

  113 add_op: OP_PLUS .

    $default  reduce using rule 113 (add_op)


state 91

  114 add_op: OP_MINUS .

    $default  reduce using rule 114 (add_op)


state 92

   57 dim_decl: MK_LB cexpr MK_RB .

    $default  reduce using rule 57 (dim_decl)


state 93

   59 cexpr: cexpr add_op . mcexpr

    CONST      shift, and go to state 51
    CONSTF     shift, and go to state 52
    MK_LPAREN  shift, and go to state 53

    mcexpr   go to state 139
    cfactor  go to state 56


state 94

  117 mul_op: OP_TIMES .

    $default  reduce using rule 117 (mul_op)


state 95

  118 mul_op: OP_DIVIDE .

    $default  reduce using rule 118 (mul_op)


state 96

   61 mcexpr: mcexpr mul_op . cfactor

    CONST      shift, and go to state 51
    CONSTF     shift, and go to state 52
    MK_LPAREN  shift, and go to state 53

    cfactor  go to state 140


state 97

   58 dim_decl: dim_decl MK_LB cexpr . MK_RB
   59 cexpr: cexpr . add_op mcexpr

    OP_PLUS   shift, and go to state 90
    OP_MINUS  shift, and go to state 91
    MK_RB     shift, and go to state 141

    add_op  go to state 93


state 98

   55 id_list: id_list MK_COMMA ID dim_decl .
   58 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 57

    $default  reduce using rule 55 (id_list)


state 99

   28 decl_list: decl_list . decl
   45 tag: ID MK_LBRACE $@4 decl_list . MK_RBRACE

    error      shift, and go to state 5
    ID         shift, and go to state 6
    VOID       shift, and go to state 7
    INT        shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRUCT     shift, and go to state 10
    TYPEDEF    shift, and go to state 11
    MK_RBRACE  shift, and go to state 142

    decl         go to state 29
    type_decl    go to state 16
    var_decl     go to state 17
    type         go to state 62
    struct_type  go to state 19


state 100

   49 tag: ID MK_LBRACE $@6 MK_RBRACE .

    $default  reduce using rule 49 (tag)


state 101

   47 tag: MK_LBRACE $@5 decl_list MK_RBRACE .

    $default  reduce using rule 47 (tag)


state 102

   85 function_call: ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    $default  reduce using rule 108 (relop_expr_list)

    function_call             go to state 74
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 144
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 81


state 103

  129 factor: OP_NOT ID . MK_LPAREN relop_expr_list MK_RPAREN
  135 var_ref: ID .

    MK_LPAREN  shift, and go to state 146

    $default  reduce using rule 135 (var_ref)


state 104

  124 factor: OP_NOT CONST .

    $default  reduce using rule 124 (factor)


state 105

  125 factor: OP_NOT CONSTF .

    $default  reduce using rule 125 (factor)


state 106

  120 factor: OP_NOT MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    relop_expr     go to state 147
    relop_term     go to state 76
    relop_factor   go to state 77
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


state 107

  132 factor: OP_NOT var_ref .
  136 var_ref: var_ref . var_ref_dim
  137        | var_ref . struct_tail

    MK_LB   shift, and go to state 127
    MK_DOT  shift, and go to state 128

    $default  reduce using rule 132 (factor)

    var_ref_dim  go to state 129
    dim          go to state 130
    struct_tail  go to state 131


state 108

  130 factor: OP_MINUS ID . MK_LPAREN relop_expr_list MK_RPAREN
  135 var_ref: ID .

    MK_LPAREN  shift, and go to state 148

    $default  reduce using rule 135 (var_ref)


state 109

  126 factor: OP_MINUS CONST .

    $default  reduce using rule 126 (factor)


state 110

  127 factor: OP_MINUS CONSTF .

    $default  reduce using rule 127 (factor)


state 111

  121 factor: OP_MINUS MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    relop_expr     go to state 149
    relop_term     go to state 76
    relop_factor   go to state 77
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


state 112

  133 factor: OP_MINUS var_ref .
  136 var_ref: var_ref . var_ref_dim
  137        | var_ref . struct_tail

    MK_LB   shift, and go to state 127
    MK_DOT  shift, and go to state 128

    $default  reduce using rule 133 (factor)

    var_ref_dim  go to state 129
    dim          go to state 130
    struct_tail  go to state 131


state 113

   94 relop_expr: relop_expr . op_or relop_term
  119 factor: MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 114
    MK_RPAREN  shift, and go to state 150

    op_or  go to state 115


state 114

   95 op_or: OP_OR .

    $default  reduce using rule 95 (op_or)


state 115

   94 relop_expr: relop_expr op_or . relop_term

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    relop_term     go to state 151
    relop_factor   go to state 77
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


state 116

   98 op_and: OP_AND .

    $default  reduce using rule 98 (op_and)


state 117

   97 relop_term: relop_term op_and . relop_factor

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    relop_factor   go to state 152
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


state 118

  105 rel_op: OP_EQ .

    $default  reduce using rule 105 (rel_op)


state 119

  106 rel_op: OP_NE .

    $default  reduce using rule 106 (rel_op)


state 120

  103 rel_op: OP_GT .

    $default  reduce using rule 103 (rel_op)


state 121

  101 rel_op: OP_LT .

    $default  reduce using rule 101 (rel_op)


state 122

  104 rel_op: OP_GE .

    $default  reduce using rule 104 (rel_op)


state 123

  102 rel_op: OP_LE .

    $default  reduce using rule 102 (rel_op)


state 124

  100 relop_factor: expr rel_op . expr

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    expr           go to state 153
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


state 125

  111 expr: expr add_op . term

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    term           go to state 154
    factor         go to state 80
    var_ref        go to state 81


state 126

  115 term: term mul_op . factor

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    factor         go to state 155
    var_ref        go to state 81


state 127

  140 dim: MK_LB . expr MK_RB

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    expr           go to state 156
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


state 128

  141 struct_tail: MK_DOT . ID

    ID  shift, and go to state 157


state 129

  136 var_ref: var_ref var_ref_dim .

    $default  reduce using rule 136 (var_ref)


state 130

  138 var_ref_dim: dim .
  139            | dim . var_ref_dim

    MK_LB  shift, and go to state 127

    MK_LB     [reduce using rule 138 (var_ref_dim)]
    $default  reduce using rule 138 (var_ref_dim)

    var_ref_dim  go to state 158
    dim          go to state 130


state 131

  137 var_ref: var_ref struct_tail .

    $default  reduce using rule 137 (var_ref)


state 132

   10 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE . $@3 block MK_RBRACE

    $default  reduce using rule 9 ($@3)

    $@3  go to state 159


state 133

   12 function_decl: type ID MK_LPAREN MK_RPAREN MK_SEMICOLON .

    $default  reduce using rule 12 (function_decl)


state 134

    8 function_decl: type ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE $@2 block MK_RBRACE
   11              | type ID MK_LPAREN param_list MK_RPAREN . MK_SEMICOLON

    MK_LBRACE     shift, and go to state 160
    MK_SEMICOLON  shift, and go to state 161


state 135

   13 param_list: param_list MK_COMMA . param

    error   shift, and go to state 5
    VOID    shift, and go to state 7
    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    STRUCT  shift, and go to state 10

    param        go to state 162
    type         go to state 85
    struct_type  go to state 86


state 136

   15 param: type ID .
   17      | type ID . dim_fn

    MK_LB  shift, and go to state 163

    $default  reduce using rule 15 (param)

    dim_fn  go to state 164


state 137

   16 param: struct_type ID .
   18      | struct_type ID . dim_fn

    MK_LB  shift, and go to state 163

    $default  reduce using rule 16 (param)

    dim_fn  go to state 165


state 138

   65 cfactor: MK_LPAREN cexpr MK_RPAREN .

    $default  reduce using rule 65 (cfactor)


state 139

   59 cexpr: cexpr add_op mcexpr .
   61 mcexpr: mcexpr . mul_op cfactor

    OP_TIMES   shift, and go to state 94
    OP_DIVIDE  shift, and go to state 95

    $default  reduce using rule 59 (cexpr)

    mul_op  go to state 96


state 140

   61 mcexpr: mcexpr mul_op cfactor .

    $default  reduce using rule 61 (mcexpr)


state 141

   58 dim_decl: dim_decl MK_LB cexpr MK_RB .

    $default  reduce using rule 58 (dim_decl)


state 142

   45 tag: ID MK_LBRACE $@4 decl_list MK_RBRACE .

    $default  reduce using rule 45 (tag)


state 143

   94 relop_expr: relop_expr . op_or relop_term
  110 nonempty_relop_expr_list: relop_expr .

    OP_OR  shift, and go to state 114

    $default  reduce using rule 110 (nonempty_relop_expr_list)

    op_or  go to state 115


state 144

   85 function_call: ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 166


state 145

  107 relop_expr_list: nonempty_relop_expr_list .
  109 nonempty_relop_expr_list: nonempty_relop_expr_list . MK_COMMA relop_expr

    MK_COMMA  shift, and go to state 167

    $default  reduce using rule 107 (relop_expr_list)


state 146

  129 factor: OP_NOT ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    $default  reduce using rule 108 (relop_expr_list)

    function_call             go to state 74
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 168
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 81


state 147

   94 relop_expr: relop_expr . op_or relop_term
  120 factor: OP_NOT MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 114
    MK_RPAREN  shift, and go to state 169

    op_or  go to state 115


state 148

  130 factor: OP_MINUS ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    $default  reduce using rule 108 (relop_expr_list)

    function_call             go to state 74
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 170
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 81


state 149

   94 relop_expr: relop_expr . op_or relop_term
  121 factor: OP_MINUS MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 114
    MK_RPAREN  shift, and go to state 171

    op_or  go to state 115


state 150

  119 factor: MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 119 (factor)


state 151

   94 relop_expr: relop_expr op_or relop_term .
   97 relop_term: relop_term . op_and relop_factor

    OP_AND  shift, and go to state 116

    $default  reduce using rule 94 (relop_expr)

    op_and  go to state 117


state 152

   97 relop_term: relop_term op_and relop_factor .

    $default  reduce using rule 97 (relop_term)


state 153

  100 relop_factor: expr rel_op expr .
  111 expr: expr . add_op term

    OP_PLUS   shift, and go to state 90
    OP_MINUS  shift, and go to state 91

    $default  reduce using rule 100 (relop_factor)

    add_op  go to state 125


state 154

  111 expr: expr add_op term .
  115 term: term . mul_op factor

    OP_TIMES   shift, and go to state 94
    OP_DIVIDE  shift, and go to state 95

    $default  reduce using rule 111 (expr)

    mul_op  go to state 126


state 155

  115 term: term mul_op factor .

    $default  reduce using rule 115 (term)


state 156

  111 expr: expr . add_op term
  140 dim: MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 90
    OP_MINUS  shift, and go to state 91
    MK_RB     shift, and go to state 172

    add_op  go to state 125


state 157

  141 struct_tail: MK_DOT ID .

    $default  reduce using rule 141 (struct_tail)


state 158

  139 var_ref_dim: dim var_ref_dim .

    $default  reduce using rule 139 (var_ref_dim)


state 159

   10 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE $@3 . block MK_RBRACE

    error         shift, and go to state 5
    ID            shift, and go to state 173
    CONST         shift, and go to state 68
    CONSTS        shift, and go to state 69
    CONSTF        shift, and go to state 70
    VOID          shift, and go to state 7
    INT           shift, and go to state 8
    FLOAT         shift, and go to state 9
    IF            shift, and go to state 174
    WHILE         shift, and go to state 175
    FOR           shift, and go to state 176
    STRUCT        shift, and go to state 10
    TYPEDEF       shift, and go to state 11
    OP_NOT        shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    MK_LPAREN     shift, and go to state 73
    MK_LBRACE     shift, and go to state 177
    MK_SEMICOLON  shift, and go to state 178
    RETURN        shift, and go to state 179

    MK_RBRACE     reduce using rule 27 (block)
    MK_SEMICOLON  [reduce using rule 108 (relop_expr_list)]

    block                     go to state 180
    decl_list                 go to state 181
    decl                      go to state 15
    type_decl                 go to state 16
    var_decl                  go to state 17
    type                      go to state 62
    struct_type               go to state 19
    stmt_list                 go to state 182
    stmt                      go to state 183
    function_call             go to state 184
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 185
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 186


state 160

    8 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . $@2 block MK_RBRACE

    $default  reduce using rule 7 ($@2)

    $@2  go to state 187


state 161

   11 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_SEMICOLON .

    $default  reduce using rule 11 (function_decl)


state 162

   13 param_list: param_list MK_COMMA param .

    $default  reduce using rule 13 (param_list)


state 163

   19 dim_fn: MK_LB . expr_null MK_RB dimfn1

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    $default  reduce using rule 23 (expr_null)

    expr_null      go to state 188
    function_call  go to state 74
    expr           go to state 189
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


state 164

   17 param: type ID dim_fn .

    $default  reduce using rule 17 (param)


state 165

   18 param: struct_type ID dim_fn .

    $default  reduce using rule 18 (param)


state 166

   85 function_call: ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 85 (function_call)


state 167

  109 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA . relop_expr

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    relop_expr     go to state 190
    relop_term     go to state 76
    relop_factor   go to state 77
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


state 168

  129 factor: OP_NOT ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 191


state 169

  120 factor: OP_NOT MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 120 (factor)


state 170

  130 factor: OP_MINUS ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 192


state 171

  121 factor: OP_MINUS MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 121 (factor)


state 172

  140 dim: MK_LB expr MK_RB .

    $default  reduce using rule 140 (dim)


state 173

   38 var_decl: ID . id_list MK_SEMICOLON
   85 function_call: ID . MK_LPAREN relop_expr_list MK_RPAREN
  135 var_ref: ID .

    ID         shift, and go to state 20
    MK_LPAREN  shift, and go to state 102

    $default  reduce using rule 135 (var_ref)

    id_list  go to state 21


state 174

   77 stmt: IF . MK_LPAREN relop_expr MK_RPAREN stmt ELSE stmt
   78     | IF . MK_LPAREN relop_expr MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 193


state 175

   75 stmt: WHILE . MK_LPAREN relop_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 194


state 176

   76 stmt: FOR . MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 195


state 177

   74 stmt: MK_LBRACE . $@8 block MK_RBRACE

    $default  reduce using rule 73 ($@8)

    $@8  go to state 196


state 178

   82 stmt: MK_SEMICOLON .

    $default  reduce using rule 82 (stmt)


state 179

   83 stmt: RETURN . MK_SEMICOLON
   84     | RETURN . relop_expr MK_SEMICOLON

    ID            shift, and go to state 67
    CONST         shift, and go to state 68
    CONSTS        shift, and go to state 69
    CONSTF        shift, and go to state 70
    OP_NOT        shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    MK_LPAREN     shift, and go to state 73
    MK_SEMICOLON  shift, and go to state 197

    function_call  go to state 74
    relop_expr     go to state 198
    relop_term     go to state 76
    relop_factor   go to state 77
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


state 180

   10 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE $@3 block . MK_RBRACE

    MK_RBRACE  shift, and go to state 199


state 181

   24 block: decl_list . stmt_list
   26      | decl_list .
   28 decl_list: decl_list . decl

    error         shift, and go to state 5
    ID            shift, and go to state 173
    CONST         shift, and go to state 68
    CONSTS        shift, and go to state 69
    CONSTF        shift, and go to state 70
    VOID          shift, and go to state 7
    INT           shift, and go to state 8
    FLOAT         shift, and go to state 9
    IF            shift, and go to state 174
    WHILE         shift, and go to state 175
    FOR           shift, and go to state 176
    STRUCT        shift, and go to state 10
    TYPEDEF       shift, and go to state 11
    OP_NOT        shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    MK_LPAREN     shift, and go to state 73
    MK_LBRACE     shift, and go to state 177
    MK_SEMICOLON  shift, and go to state 178
    RETURN        shift, and go to state 179

    MK_RBRACE     reduce using rule 26 (block)
    MK_SEMICOLON  [reduce using rule 108 (relop_expr_list)]

    decl                      go to state 29
    type_decl                 go to state 16
    var_decl                  go to state 17
    type                      go to state 62
    struct_type               go to state 19
    stmt_list                 go to state 200
    stmt                      go to state 183
    function_call             go to state 184
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 185
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 186


state 182

   25 block: stmt_list .
   71 stmt_list: stmt_list . stmt

    ID            shift, and go to state 67
    CONST         shift, and go to state 68
    CONSTS        shift, and go to state 69
    CONSTF        shift, and go to state 70
    IF            shift, and go to state 174
    WHILE         shift, and go to state 175
    FOR           shift, and go to state 176
    OP_NOT        shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    MK_LPAREN     shift, and go to state 73
    MK_LBRACE     shift, and go to state 177
    MK_SEMICOLON  shift, and go to state 178
    RETURN        shift, and go to state 179

    MK_SEMICOLON  [reduce using rule 108 (relop_expr_list)]
    $default      reduce using rule 25 (block)

    stmt                      go to state 201
    function_call             go to state 184
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 185
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 186


state 183

   72 stmt_list: stmt .

    $default  reduce using rule 72 (stmt_list)


state 184

   79 stmt: function_call .
  128 factor: function_call .

    OP_OR         reduce using rule 128 (factor)
    OP_AND        reduce using rule 128 (factor)
    OP_EQ         reduce using rule 128 (factor)
    OP_NE         reduce using rule 128 (factor)
    OP_GT         reduce using rule 128 (factor)
    OP_LT         reduce using rule 128 (factor)
    OP_GE         reduce using rule 128 (factor)
    OP_LE         reduce using rule 128 (factor)
    OP_PLUS       reduce using rule 128 (factor)
    OP_MINUS      reduce using rule 79 (stmt)
    OP_MINUS      [reduce using rule 128 (factor)]
    OP_TIMES      reduce using rule 128 (factor)
    OP_DIVIDE     reduce using rule 128 (factor)
    MK_COMMA      reduce using rule 128 (factor)
    MK_SEMICOLON  reduce using rule 79 (stmt)
    MK_SEMICOLON  [reduce using rule 128 (factor)]
    $default      reduce using rule 79 (stmt)


state 185

   81 stmt: relop_expr_list . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 202


state 186

   80 stmt: var_ref . OP_ASSIGN relop_expr MK_SEMICOLON
  131 factor: var_ref .
  136 var_ref: var_ref . var_ref_dim
  137        | var_ref . struct_tail

    OP_ASSIGN  shift, and go to state 203
    MK_LB      shift, and go to state 127
    MK_DOT     shift, and go to state 128

    $default  reduce using rule 131 (factor)

    var_ref_dim  go to state 129
    dim          go to state 130
    struct_tail  go to state 131


state 187

    8 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE $@2 . block MK_RBRACE

    error         shift, and go to state 5
    ID            shift, and go to state 173
    CONST         shift, and go to state 68
    CONSTS        shift, and go to state 69
    CONSTF        shift, and go to state 70
    VOID          shift, and go to state 7
    INT           shift, and go to state 8
    FLOAT         shift, and go to state 9
    IF            shift, and go to state 174
    WHILE         shift, and go to state 175
    FOR           shift, and go to state 176
    STRUCT        shift, and go to state 10
    TYPEDEF       shift, and go to state 11
    OP_NOT        shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    MK_LPAREN     shift, and go to state 73
    MK_LBRACE     shift, and go to state 177
    MK_SEMICOLON  shift, and go to state 178
    RETURN        shift, and go to state 179

    MK_RBRACE     reduce using rule 27 (block)
    MK_SEMICOLON  [reduce using rule 108 (relop_expr_list)]

    block                     go to state 204
    decl_list                 go to state 181
    decl                      go to state 15
    type_decl                 go to state 16
    var_decl                  go to state 17
    type                      go to state 62
    struct_type               go to state 19
    stmt_list                 go to state 182
    stmt                      go to state 183
    function_call             go to state 184
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 185
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 186


state 188

   19 dim_fn: MK_LB expr_null . MK_RB dimfn1

    MK_RB  shift, and go to state 205


state 189

   22 expr_null: expr .
  111 expr: expr . add_op term

    OP_PLUS   shift, and go to state 90
    OP_MINUS  shift, and go to state 91

    $default  reduce using rule 22 (expr_null)

    add_op  go to state 125


state 190

   94 relop_expr: relop_expr . op_or relop_term
  109 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr .

    OP_OR  shift, and go to state 114

    $default  reduce using rule 109 (nonempty_relop_expr_list)

    op_or  go to state 115


state 191

  129 factor: OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 129 (factor)


state 192

  130 factor: OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 130 (factor)


state 193

   77 stmt: IF MK_LPAREN . relop_expr MK_RPAREN stmt ELSE stmt
   78     | IF MK_LPAREN . relop_expr MK_RPAREN stmt

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    relop_expr     go to state 206
    relop_term     go to state 76
    relop_factor   go to state 77
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


state 194

   75 stmt: WHILE MK_LPAREN . relop_expr_list MK_RPAREN stmt

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    $default  reduce using rule 108 (relop_expr_list)

    function_call             go to state 74
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 207
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 81


state 195

   76 stmt: FOR MK_LPAREN . assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 208
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    $default  reduce using rule 87 (assign_expr_list)

    function_call              go to state 74
    assign_expr_list           go to state 209
    nonempty_assign_expr_list  go to state 210
    assign_expr                go to state 211
    relop_expr                 go to state 212
    relop_term                 go to state 76
    relop_factor               go to state 77
    expr                       go to state 78
    term                       go to state 79
    factor                     go to state 80
    var_ref                    go to state 81


state 196

   74 stmt: MK_LBRACE $@8 . block MK_RBRACE

    error         shift, and go to state 5
    ID            shift, and go to state 173
    CONST         shift, and go to state 68
    CONSTS        shift, and go to state 69
    CONSTF        shift, and go to state 70
    VOID          shift, and go to state 7
    INT           shift, and go to state 8
    FLOAT         shift, and go to state 9
    IF            shift, and go to state 174
    WHILE         shift, and go to state 175
    FOR           shift, and go to state 176
    STRUCT        shift, and go to state 10
    TYPEDEF       shift, and go to state 11
    OP_NOT        shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    MK_LPAREN     shift, and go to state 73
    MK_LBRACE     shift, and go to state 177
    MK_SEMICOLON  shift, and go to state 178
    RETURN        shift, and go to state 179

    MK_RBRACE     reduce using rule 27 (block)
    MK_SEMICOLON  [reduce using rule 108 (relop_expr_list)]

    block                     go to state 213
    decl_list                 go to state 181
    decl                      go to state 15
    type_decl                 go to state 16
    var_decl                  go to state 17
    type                      go to state 62
    struct_type               go to state 19
    stmt_list                 go to state 182
    stmt                      go to state 183
    function_call             go to state 184
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 185
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 186


state 197

   83 stmt: RETURN MK_SEMICOLON .

    $default  reduce using rule 83 (stmt)


state 198

   84 stmt: RETURN relop_expr . MK_SEMICOLON
   94 relop_expr: relop_expr . op_or relop_term

    OP_OR         shift, and go to state 114
    MK_SEMICOLON  shift, and go to state 214

    op_or  go to state 115


state 199

   10 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE $@3 block MK_RBRACE .

    $default  reduce using rule 10 (function_decl)


state 200

   24 block: decl_list stmt_list .
   71 stmt_list: stmt_list . stmt

    ID            shift, and go to state 67
    CONST         shift, and go to state 68
    CONSTS        shift, and go to state 69
    CONSTF        shift, and go to state 70
    IF            shift, and go to state 174
    WHILE         shift, and go to state 175
    FOR           shift, and go to state 176
    OP_NOT        shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    MK_LPAREN     shift, and go to state 73
    MK_LBRACE     shift, and go to state 177
    MK_SEMICOLON  shift, and go to state 178
    RETURN        shift, and go to state 179

    MK_SEMICOLON  [reduce using rule 108 (relop_expr_list)]
    $default      reduce using rule 24 (block)

    stmt                      go to state 201
    function_call             go to state 184
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 185
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 186


state 201

   71 stmt_list: stmt_list stmt .

    $default  reduce using rule 71 (stmt_list)


state 202

   81 stmt: relop_expr_list MK_SEMICOLON .

    $default  reduce using rule 81 (stmt)


state 203

   80 stmt: var_ref OP_ASSIGN . relop_expr MK_SEMICOLON

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    relop_expr     go to state 215
    relop_term     go to state 76
    relop_factor   go to state 77
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


state 204

    8 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE $@2 block . MK_RBRACE

    MK_RBRACE  shift, and go to state 216


state 205

   19 dim_fn: MK_LB expr_null MK_RB . dimfn1

    MK_LB  shift, and go to state 217

    $default  reduce using rule 21 (dimfn1)

    dimfn1  go to state 218


state 206

   77 stmt: IF MK_LPAREN relop_expr . MK_RPAREN stmt ELSE stmt
   78     | IF MK_LPAREN relop_expr . MK_RPAREN stmt
   94 relop_expr: relop_expr . op_or relop_term

    OP_OR      shift, and go to state 114
    MK_RPAREN  shift, and go to state 219

    op_or  go to state 115


state 207

   75 stmt: WHILE MK_LPAREN relop_expr_list . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 220


state 208

   85 function_call: ID . MK_LPAREN relop_expr_list MK_RPAREN
   91 assign_expr: ID . $@9 OP_ASSIGN relop_expr
  135 var_ref: ID .

    MK_LPAREN  shift, and go to state 102

    OP_ASSIGN  reduce using rule 90 ($@9)
    $default   reduce using rule 135 (var_ref)

    $@9  go to state 221


state 209

   76 stmt: FOR MK_LPAREN assign_expr_list . MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 222


state 210

   86 assign_expr_list: nonempty_assign_expr_list .
   88 nonempty_assign_expr_list: nonempty_assign_expr_list . MK_COMMA assign_expr

    MK_COMMA  shift, and go to state 223

    $default  reduce using rule 86 (assign_expr_list)


state 211

   89 nonempty_assign_expr_list: assign_expr .

    $default  reduce using rule 89 (nonempty_assign_expr_list)


state 212

   92 assign_expr: relop_expr .
   94 relop_expr: relop_expr . op_or relop_term

    OP_OR  shift, and go to state 114

    $default  reduce using rule 92 (assign_expr)

    op_or  go to state 115


state 213

   74 stmt: MK_LBRACE $@8 block . MK_RBRACE

    MK_RBRACE  shift, and go to state 224


state 214

   84 stmt: RETURN relop_expr MK_SEMICOLON .

    $default  reduce using rule 84 (stmt)


state 215

   80 stmt: var_ref OP_ASSIGN relop_expr . MK_SEMICOLON
   94 relop_expr: relop_expr . op_or relop_term

    OP_OR         shift, and go to state 114
    MK_SEMICOLON  shift, and go to state 225

    op_or  go to state 115


state 216

    8 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE $@2 block MK_RBRACE .

    $default  reduce using rule 8 (function_decl)


state 217

   20 dimfn1: MK_LB . expr MK_RB dimfn1

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    expr           go to state 226
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


state 218

   19 dim_fn: MK_LB expr_null MK_RB dimfn1 .

    $default  reduce using rule 19 (dim_fn)


state 219

   77 stmt: IF MK_LPAREN relop_expr MK_RPAREN . stmt ELSE stmt
   78     | IF MK_LPAREN relop_expr MK_RPAREN . stmt

    ID            shift, and go to state 67
    CONST         shift, and go to state 68
    CONSTS        shift, and go to state 69
    CONSTF        shift, and go to state 70
    IF            shift, and go to state 174
    WHILE         shift, and go to state 175
    FOR           shift, and go to state 176
    OP_NOT        shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    MK_LPAREN     shift, and go to state 73
    MK_LBRACE     shift, and go to state 177
    MK_SEMICOLON  shift, and go to state 178
    RETURN        shift, and go to state 179

    MK_SEMICOLON  [reduce using rule 108 (relop_expr_list)]

    stmt                      go to state 227
    function_call             go to state 184
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 185
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 186


state 220

   75 stmt: WHILE MK_LPAREN relop_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 67
    CONST         shift, and go to state 68
    CONSTS        shift, and go to state 69
    CONSTF        shift, and go to state 70
    IF            shift, and go to state 174
    WHILE         shift, and go to state 175
    FOR           shift, and go to state 176
    OP_NOT        shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    MK_LPAREN     shift, and go to state 73
    MK_LBRACE     shift, and go to state 177
    MK_SEMICOLON  shift, and go to state 178
    RETURN        shift, and go to state 179

    MK_SEMICOLON  [reduce using rule 108 (relop_expr_list)]

    stmt                      go to state 228
    function_call             go to state 184
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 185
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 186


state 221

   91 assign_expr: ID $@9 . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 229


state 222

   76 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON . relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    $default  reduce using rule 108 (relop_expr_list)

    function_call             go to state 74
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 230
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 81


state 223

   88 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA . assign_expr

    ID         shift, and go to state 208
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    assign_expr    go to state 231
    relop_expr     go to state 212
    relop_term     go to state 76
    relop_factor   go to state 77
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


state 224

   74 stmt: MK_LBRACE $@8 block MK_RBRACE .

    $default  reduce using rule 74 (stmt)


state 225

   80 stmt: var_ref OP_ASSIGN relop_expr MK_SEMICOLON .

    $default  reduce using rule 80 (stmt)


state 226

   20 dimfn1: MK_LB expr . MK_RB dimfn1
  111 expr: expr . add_op term

    OP_PLUS   shift, and go to state 90
    OP_MINUS  shift, and go to state 91
    MK_RB     shift, and go to state 232

    add_op  go to state 125


state 227

   77 stmt: IF MK_LPAREN relop_expr MK_RPAREN stmt . ELSE stmt
   78     | IF MK_LPAREN relop_expr MK_RPAREN stmt .

    ELSE  shift, and go to state 233

    ELSE      [reduce using rule 78 (stmt)]
    $default  reduce using rule 78 (stmt)


state 228

   75 stmt: WHILE MK_LPAREN relop_expr_list MK_RPAREN stmt .

    $default  reduce using rule 75 (stmt)


state 229

   91 assign_expr: ID $@9 OP_ASSIGN . relop_expr

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    relop_expr     go to state 234
    relop_term     go to state 76
    relop_factor   go to state 77
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


state 230

   76 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list . MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 235


state 231

   88 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr .

    $default  reduce using rule 88 (nonempty_assign_expr_list)


state 232

   20 dimfn1: MK_LB expr MK_RB . dimfn1

    MK_LB  shift, and go to state 217

    $default  reduce using rule 21 (dimfn1)

    dimfn1  go to state 236


state 233

   77 stmt: IF MK_LPAREN relop_expr MK_RPAREN stmt ELSE . stmt

    ID            shift, and go to state 67
    CONST         shift, and go to state 68
    CONSTS        shift, and go to state 69
    CONSTF        shift, and go to state 70
    IF            shift, and go to state 174
    WHILE         shift, and go to state 175
    FOR           shift, and go to state 176
    OP_NOT        shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    MK_LPAREN     shift, and go to state 73
    MK_LBRACE     shift, and go to state 177
    MK_SEMICOLON  shift, and go to state 178
    RETURN        shift, and go to state 179

    MK_SEMICOLON  [reduce using rule 108 (relop_expr_list)]

    stmt                      go to state 237
    function_call             go to state 184
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 185
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 186


state 234

   91 assign_expr: ID $@9 OP_ASSIGN relop_expr .
   94 relop_expr: relop_expr . op_or relop_term

    OP_OR  shift, and go to state 114

    $default  reduce using rule 91 (assign_expr)

    op_or  go to state 115


state 235

   76 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON . assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 208
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    $default  reduce using rule 87 (assign_expr_list)

    function_call              go to state 74
    assign_expr_list           go to state 238
    nonempty_assign_expr_list  go to state 210
    assign_expr                go to state 211
    relop_expr                 go to state 212
    relop_term                 go to state 76
    relop_factor               go to state 77
    expr                       go to state 78
    term                       go to state 79
    factor                     go to state 80
    var_ref                    go to state 81


state 236

   20 dimfn1: MK_LB expr MK_RB dimfn1 .

    $default  reduce using rule 20 (dimfn1)


state 237

   77 stmt: IF MK_LPAREN relop_expr MK_RPAREN stmt ELSE stmt .

    $default  reduce using rule 77 (stmt)


state 238

   76 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 239


state 239

   76 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 67
    CONST         shift, and go to state 68
    CONSTS        shift, and go to state 69
    CONSTF        shift, and go to state 70
    IF            shift, and go to state 174
    WHILE         shift, and go to state 175
    FOR           shift, and go to state 176
    OP_NOT        shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    MK_LPAREN     shift, and go to state 73
    MK_LBRACE     shift, and go to state 177
    MK_SEMICOLON  shift, and go to state 178
    RETURN        shift, and go to state 179

    MK_SEMICOLON  [reduce using rule 108 (relop_expr_list)]

    stmt                      go to state 240
    function_call             go to state 184
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 185
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 186


state 240

   76 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt .

    $default  reduce using rule 76 (stmt)
