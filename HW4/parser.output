Terminals unused in grammar

   ERROR


State 25 conflicts: 1 shift/reduce
State 130 conflicts: 1 shift/reduce
State 159 conflicts: 1 shift/reduce
State 181 conflicts: 1 shift/reduce
State 182 conflicts: 1 shift/reduce
State 184 conflicts: 1 shift/reduce
State 185 conflicts: 2 reduce/reduce
State 188 conflicts: 1 shift/reduce
State 197 conflicts: 1 shift/reduce
State 201 conflicts: 1 shift/reduce
State 203 conflicts: 1 shift/reduce
State 228 conflicts: 1 shift/reduce
State 238 conflicts: 1 shift/reduce
State 247 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: /* empty */

    2 program: $@1 global_decl_list

    3 global_decl_list: global_decl_list global_decl
    4                 | /* empty */

    5 global_decl: decl_list function_decl
    6            | function_decl

    7 $@2: /* empty */

    8 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE $@2 block MK_RBRACE

    9 $@3: /* empty */

   10 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE $@3 block MK_RBRACE
   11              | type ID MK_LPAREN param_list MK_RPAREN MK_SEMICOLON
   12              | type ID MK_LPAREN MK_RPAREN MK_SEMICOLON

   13 param_list: param_list MK_COMMA param
   14           | param

   15 param: type ID
   16      | struct_type ID
   17      | type ID dim_fn
   18      | struct_type ID dim_fn

   19 dim_fn: MK_LB expr_null MK_RB dimfn1

   20 dimfn1: MK_LB expr MK_RB dimfn1
   21       | /* empty */

   22 expr_null: expr
   23          | /* empty */

   24 block: decl_list stmt_list
   25      | stmt_list
   26      | decl_list
   27      | /* empty */

   28 decl_list: decl_list decl
   29          | decl

   30 decl: type_decl
   31     | var_decl

   32 type_decl: TYPEDEF type id_list MK_SEMICOLON
   33          | TYPEDEF VOID id_list MK_SEMICOLON
   34          | TYPEDEF struct_type id_list MK_SEMICOLON
   35          | struct_type MK_SEMICOLON

   36 var_decl: type init_id_list MK_SEMICOLON
   37         | struct_type id_list MK_SEMICOLON
   38         | ID id_list MK_SEMICOLON

   39 type: INT
   40     | FLOAT
   41     | VOID
   42     | error

   43 struct_type: STRUCT tag

   44 $@4: /* empty */

   45 tag: ID MK_LBRACE $@4 decl_list MK_RBRACE

   46 $@5: /* empty */

   47 tag: MK_LBRACE $@5 decl_list MK_RBRACE

   48 $@6: /* empty */

   49 tag: ID MK_LBRACE $@6 MK_RBRACE

   50 $@7: /* empty */

   51 tag: MK_LBRACE $@7 MK_RBRACE
   52    | ID

   53 id_list: ID
   54        | id_list MK_COMMA ID
   55        | id_list MK_COMMA ID dim_decl
   56        | ID dim_decl

   57 dim_decl: MK_LB cexpr MK_RB
   58         | dim_decl MK_LB cexpr MK_RB

   59 cexpr: cexpr add_op mcexpr
   60      | mcexpr

   61 mcexpr: mcexpr mul_op cfactor
   62       | cfactor

   63 cfactor: CONST
   64        | CONSTF
   65        | MK_LPAREN cexpr MK_RPAREN

   66 init_id_list: init_id
   67             | init_id_list MK_COMMA init_id

   68 init_id: ID
   69        | ID dim_decl
   70        | ID OP_ASSIGN relop_expr

   71 stmt_list: stmt_list stmt
   72          | stmt

   73 $@8: /* empty */

   74 stmt: MK_LBRACE $@8 block MK_RBRACE

   75 $@9: /* empty */

   76 $@10: /* empty */

   77 stmt: WHILE $@9 MK_LPAREN relop_expr_list $@10 MK_RPAREN stmt

   78 $@11: /* empty */

   79 $@12: /* empty */

   80 $@13: /* empty */

   81 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON $@11 relop_expr_list MK_SEMICOLON $@12 assign_expr_list MK_RPAREN $@13 stmt

   82 $@14: /* empty */

   83 stmt: if_stmt stmt ELSE $@14 stmt
   84     | if_stmt stmt
   85     | function_call
   86     | var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   87     | relop_expr_list MK_SEMICOLON
   88     | MK_SEMICOLON
   89     | RETURN MK_SEMICOLON
   90     | RETURN relop_expr MK_SEMICOLON

   91 $@15: /* empty */

   92 if_stmt: IF $@15 MK_LPAREN relop_expr MK_RPAREN

   93 function_call: ID MK_LPAREN relop_expr_list MK_RPAREN

   94 assign_expr_list: nonempty_assign_expr_list
   95                 | /* empty */

   96 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr
   97                          | assign_expr

   98 $@16: /* empty */

   99 assign_expr: ID $@16 OP_ASSIGN relop_expr
  100            | relop_expr

  101 relop_expr: relop_term
  102           | relop_expr op_or relop_term

  103 op_or: OP_OR

  104 relop_term: relop_factor
  105           | relop_term op_and relop_factor

  106 op_and: OP_AND

  107 relop_factor: expr
  108             | expr rel_op expr

  109 rel_op: OP_LT
  110       | OP_LE
  111       | OP_GT
  112       | OP_GE
  113       | OP_EQ
  114       | OP_NE

  115 relop_expr_list: nonempty_relop_expr_list
  116                | /* empty */

  117 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr
  118                         | relop_expr

  119 expr: expr add_op term
  120     | term

  121 add_op: OP_PLUS
  122       | OP_MINUS

  123 term: term mul_op factor
  124     | factor

  125 mul_op: OP_TIMES
  126       | OP_DIVIDE

  127 factor: MK_LPAREN relop_expr MK_RPAREN
  128       | OP_NOT MK_LPAREN relop_expr MK_RPAREN
  129       | OP_MINUS MK_LPAREN relop_expr MK_RPAREN
  130       | CONST
  131       | CONSTF
  132       | OP_NOT CONST
  133       | OP_NOT CONSTF
  134       | OP_MINUS CONST
  135       | OP_MINUS CONSTF
  136       | function_call
  137       | OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  138       | OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN
  139       | var_ref
  140       | OP_NOT var_ref
  141       | OP_MINUS var_ref
  142       | CONSTS

  143 var_ref: ID
  144        | var_ref var_ref_dim
  145        | var_ref struct_tail

  146 var_ref_dim: dim
  147            | dim var_ref_dim

  148 dim: MK_LB expr MK_RB

  149 struct_tail: MK_DOT ID


Terminals, with rules where they appear

$end (0) 0
error (256) 42
ID (258) 8 10 11 12 15 16 17 18 38 45 49 52 53 54 55 56 68 69 70 93
    99 137 138 143 149
CONST (259) 63 130 132 134
CONSTS (260) 142
CONSTF (261) 64 131 133 135
VOID (262) 33 41
INT (263) 39
FLOAT (264) 40
IF (265) 92
ELSE (266) 83
WHILE (267) 77
FOR (268) 81
STRUCT (269) 43
TYPEDEF (270) 32 33 34
OP_ASSIGN (271) 70 86 99
OP_OR (272) 103
OP_AND (273) 106
OP_NOT (274) 128 132 133 137 140
OP_EQ (275) 113
OP_NE (276) 114
OP_GT (277) 111
OP_LT (278) 109
OP_GE (279) 112
OP_LE (280) 110
OP_PLUS (281) 121
OP_MINUS (282) 122 129 134 135 138 141
OP_TIMES (283) 125
OP_DIVIDE (284) 126
MK_LB (285) 19 20 57 58 148
MK_RB (286) 19 20 57 58 148
MK_LPAREN (287) 8 10 11 12 65 77 81 92 93 127 128 129 137 138
MK_RPAREN (288) 8 10 11 12 65 77 81 92 93 127 128 129 137 138
MK_LBRACE (289) 8 10 45 47 49 51 74
MK_RBRACE (290) 8 10 45 47 49 51 74
MK_COMMA (291) 13 54 55 67 96 117
MK_SEMICOLON (292) 11 12 32 33 34 35 36 37 38 81 86 87 88 89 90
MK_DOT (293) 149
ERROR (294)
RETURN (295) 89 90


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program (42)
    on left: 2, on right: 0
$@1 (43)
    on left: 1, on right: 2
global_decl_list (44)
    on left: 3 4, on right: 2 3
global_decl (45)
    on left: 5 6, on right: 3
function_decl (46)
    on left: 8 10 11 12, on right: 5 6
$@2 (47)
    on left: 7, on right: 8
$@3 (48)
    on left: 9, on right: 10
param_list (49)
    on left: 13 14, on right: 8 11 13
param (50)
    on left: 15 16 17 18, on right: 13 14
dim_fn (51)
    on left: 19, on right: 17 18
dimfn1 (52)
    on left: 20 21, on right: 19 20
expr_null (53)
    on left: 22 23, on right: 19
block (54)
    on left: 24 25 26 27, on right: 8 10 74
decl_list (55)
    on left: 28 29, on right: 5 24 26 28 45 47
decl (56)
    on left: 30 31, on right: 28 29
type_decl (57)
    on left: 32 33 34 35, on right: 30
var_decl (58)
    on left: 36 37 38, on right: 31
type (59)
    on left: 39 40 41 42, on right: 8 10 11 12 15 17 32 36
struct_type (60)
    on left: 43, on right: 16 18 34 35 37
tag (61)
    on left: 45 47 49 51 52, on right: 43
$@4 (62)
    on left: 44, on right: 45
$@5 (63)
    on left: 46, on right: 47
$@6 (64)
    on left: 48, on right: 49
$@7 (65)
    on left: 50, on right: 51
id_list (66)
    on left: 53 54 55 56, on right: 32 33 34 37 38 54 55
dim_decl (67)
    on left: 57 58, on right: 55 56 58 69
cexpr (68)
    on left: 59 60, on right: 57 58 59 65
mcexpr (69)
    on left: 61 62, on right: 59 60 61
cfactor (70)
    on left: 63 64 65, on right: 61 62
init_id_list (71)
    on left: 66 67, on right: 36 67
init_id (72)
    on left: 68 69 70, on right: 66 67
stmt_list (73)
    on left: 71 72, on right: 24 25 71
stmt (74)
    on left: 74 77 81 83 84 85 86 87 88 89 90, on right: 71 72 77 81
    83 84
$@8 (75)
    on left: 73, on right: 74
$@9 (76)
    on left: 75, on right: 77
$@10 (77)
    on left: 76, on right: 77
$@11 (78)
    on left: 78, on right: 81
$@12 (79)
    on left: 79, on right: 81
$@13 (80)
    on left: 80, on right: 81
$@14 (81)
    on left: 82, on right: 83
if_stmt (82)
    on left: 92, on right: 83 84
$@15 (83)
    on left: 91, on right: 92
function_call (84)
    on left: 93, on right: 85 136
assign_expr_list (85)
    on left: 94 95, on right: 81
nonempty_assign_expr_list (86)
    on left: 96 97, on right: 94 96
assign_expr (87)
    on left: 99 100, on right: 96 97
$@16 (88)
    on left: 98, on right: 99
relop_expr (89)
    on left: 101 102, on right: 70 86 90 92 99 100 102 117 118 127
    128 129
op_or (90)
    on left: 103, on right: 102
relop_term (91)
    on left: 104 105, on right: 101 102 105
op_and (92)
    on left: 106, on right: 105
relop_factor (93)
    on left: 107 108, on right: 104 105
rel_op (94)
    on left: 109 110 111 112 113 114, on right: 108
relop_expr_list (95)
    on left: 115 116, on right: 77 81 87 93 137 138
nonempty_relop_expr_list (96)
    on left: 117 118, on right: 115 117
expr (97)
    on left: 119 120, on right: 20 22 107 108 119 148
add_op (98)
    on left: 121 122, on right: 59 119
term (99)
    on left: 123 124, on right: 119 120 123
mul_op (100)
    on left: 125 126, on right: 61 123
factor (101)
    on left: 127 128 129 130 131 132 133 134 135 136 137 138 139 140
    141 142, on right: 123 124
var_ref (102)
    on left: 143 144 145, on right: 86 139 140 141 144 145
var_ref_dim (103)
    on left: 146 147, on right: 144 147
dim (104)
    on left: 148, on right: 146 147
struct_tail (105)
    on left: 149, on right: 145


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . global_decl_list

    $default  reduce using rule 4 (global_decl_list)

    global_decl_list  go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: $@1 global_decl_list .
    3 global_decl_list: global_decl_list . global_decl

    error    shift, and go to state 5
    ID       shift, and go to state 6
    VOID     shift, and go to state 7
    INT      shift, and go to state 8
    FLOAT    shift, and go to state 9
    STRUCT   shift, and go to state 10
    TYPEDEF  shift, and go to state 11

    $end  reduce using rule 2 (program)

    global_decl    go to state 12
    function_decl  go to state 13
    decl_list      go to state 14
    decl           go to state 15
    type_decl      go to state 16
    var_decl       go to state 17
    type           go to state 18
    struct_type    go to state 19


State 5

   42 type: error .

    $default  reduce using rule 42 (type)


State 6

   38 var_decl: ID . id_list MK_SEMICOLON

    ID  shift, and go to state 20

    id_list  go to state 21


State 7

   41 type: VOID .

    $default  reduce using rule 41 (type)


State 8

   39 type: INT .

    $default  reduce using rule 39 (type)


State 9

   40 type: FLOAT .

    $default  reduce using rule 40 (type)


State 10

   43 struct_type: STRUCT . tag

    ID         shift, and go to state 22
    MK_LBRACE  shift, and go to state 23

    tag  go to state 24


State 11

   32 type_decl: TYPEDEF . type id_list MK_SEMICOLON
   33          | TYPEDEF . VOID id_list MK_SEMICOLON
   34          | TYPEDEF . struct_type id_list MK_SEMICOLON

    error   shift, and go to state 5
    VOID    shift, and go to state 25
    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    STRUCT  shift, and go to state 10

    type         go to state 26
    struct_type  go to state 27


State 12

    3 global_decl_list: global_decl_list global_decl .

    $default  reduce using rule 3 (global_decl_list)


State 13

    6 global_decl: function_decl .

    $default  reduce using rule 6 (global_decl)


State 14

    5 global_decl: decl_list . function_decl
   28 decl_list: decl_list . decl

    error    shift, and go to state 5
    ID       shift, and go to state 6
    VOID     shift, and go to state 7
    INT      shift, and go to state 8
    FLOAT    shift, and go to state 9
    STRUCT   shift, and go to state 10
    TYPEDEF  shift, and go to state 11

    function_decl  go to state 28
    decl           go to state 29
    type_decl      go to state 16
    var_decl       go to state 17
    type           go to state 18
    struct_type    go to state 19


State 15

   29 decl_list: decl .

    $default  reduce using rule 29 (decl_list)


State 16

   30 decl: type_decl .

    $default  reduce using rule 30 (decl)


State 17

   31 decl: var_decl .

    $default  reduce using rule 31 (decl)


State 18

    8 function_decl: type . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE $@2 block MK_RBRACE
   10              | type . ID MK_LPAREN MK_RPAREN MK_LBRACE $@3 block MK_RBRACE
   11              | type . ID MK_LPAREN param_list MK_RPAREN MK_SEMICOLON
   12              | type . ID MK_LPAREN MK_RPAREN MK_SEMICOLON
   36 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 30

    init_id_list  go to state 31
    init_id       go to state 32


State 19

   35 type_decl: struct_type . MK_SEMICOLON
   37 var_decl: struct_type . id_list MK_SEMICOLON

    ID            shift, and go to state 20
    MK_SEMICOLON  shift, and go to state 33

    id_list  go to state 34


State 20

   53 id_list: ID .
   56        | ID . dim_decl

    MK_LB  shift, and go to state 35

    $default  reduce using rule 53 (id_list)

    dim_decl  go to state 36


State 21

   38 var_decl: ID id_list . MK_SEMICOLON
   54 id_list: id_list . MK_COMMA ID
   55        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 37
    MK_SEMICOLON  shift, and go to state 38


State 22

   45 tag: ID . MK_LBRACE $@4 decl_list MK_RBRACE
   49    | ID . MK_LBRACE $@6 MK_RBRACE
   52    | ID .

    MK_LBRACE  shift, and go to state 39

    $default  reduce using rule 52 (tag)


State 23

   47 tag: MK_LBRACE . $@5 decl_list MK_RBRACE
   51    | MK_LBRACE . $@7 MK_RBRACE

    MK_RBRACE  reduce using rule 50 ($@7)
    $default   reduce using rule 46 ($@5)

    $@5  go to state 40
    $@7  go to state 41


State 24

   43 struct_type: STRUCT tag .

    $default  reduce using rule 43 (struct_type)


State 25

   33 type_decl: TYPEDEF VOID . id_list MK_SEMICOLON
   41 type: VOID .

    ID  shift, and go to state 20

    ID  [reduce using rule 41 (type)]

    id_list  go to state 42


State 26

   32 type_decl: TYPEDEF type . id_list MK_SEMICOLON

    ID  shift, and go to state 20

    id_list  go to state 43


State 27

   34 type_decl: TYPEDEF struct_type . id_list MK_SEMICOLON

    ID  shift, and go to state 20

    id_list  go to state 44


State 28

    5 global_decl: decl_list function_decl .

    $default  reduce using rule 5 (global_decl)


State 29

   28 decl_list: decl_list decl .

    $default  reduce using rule 28 (decl_list)


State 30

    8 function_decl: type ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE $@2 block MK_RBRACE
   10              | type ID . MK_LPAREN MK_RPAREN MK_LBRACE $@3 block MK_RBRACE
   11              | type ID . MK_LPAREN param_list MK_RPAREN MK_SEMICOLON
   12              | type ID . MK_LPAREN MK_RPAREN MK_SEMICOLON
   68 init_id: ID .
   69        | ID . dim_decl
   70        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 45
    MK_LB      shift, and go to state 35
    MK_LPAREN  shift, and go to state 46

    $default  reduce using rule 68 (init_id)

    dim_decl  go to state 47


State 31

   36 var_decl: type init_id_list . MK_SEMICOLON
   67 init_id_list: init_id_list . MK_COMMA init_id

    MK_COMMA      shift, and go to state 48
    MK_SEMICOLON  shift, and go to state 49


State 32

   66 init_id_list: init_id .

    $default  reduce using rule 66 (init_id_list)


State 33

   35 type_decl: struct_type MK_SEMICOLON .

    $default  reduce using rule 35 (type_decl)


State 34

   37 var_decl: struct_type id_list . MK_SEMICOLON
   54 id_list: id_list . MK_COMMA ID
   55        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 37
    MK_SEMICOLON  shift, and go to state 50


State 35

   57 dim_decl: MK_LB . cexpr MK_RB

    CONST      shift, and go to state 51
    CONSTF     shift, and go to state 52
    MK_LPAREN  shift, and go to state 53

    cexpr    go to state 54
    mcexpr   go to state 55
    cfactor  go to state 56


State 36

   56 id_list: ID dim_decl .
   58 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 57

    $default  reduce using rule 56 (id_list)


State 37

   54 id_list: id_list MK_COMMA . ID
   55        | id_list MK_COMMA . ID dim_decl

    ID  shift, and go to state 58


State 38

   38 var_decl: ID id_list MK_SEMICOLON .

    $default  reduce using rule 38 (var_decl)


State 39

   45 tag: ID MK_LBRACE . $@4 decl_list MK_RBRACE
   49    | ID MK_LBRACE . $@6 MK_RBRACE

    MK_RBRACE  reduce using rule 48 ($@6)
    $default   reduce using rule 44 ($@4)

    $@4  go to state 59
    $@6  go to state 60


State 40

   47 tag: MK_LBRACE $@5 . decl_list MK_RBRACE

    error    shift, and go to state 5
    ID       shift, and go to state 6
    VOID     shift, and go to state 7
    INT      shift, and go to state 8
    FLOAT    shift, and go to state 9
    STRUCT   shift, and go to state 10
    TYPEDEF  shift, and go to state 11

    decl_list    go to state 61
    decl         go to state 15
    type_decl    go to state 16
    var_decl     go to state 17
    type         go to state 62
    struct_type  go to state 19


State 41

   51 tag: MK_LBRACE $@7 . MK_RBRACE

    MK_RBRACE  shift, and go to state 63


State 42

   33 type_decl: TYPEDEF VOID id_list . MK_SEMICOLON
   54 id_list: id_list . MK_COMMA ID
   55        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 37
    MK_SEMICOLON  shift, and go to state 64


State 43

   32 type_decl: TYPEDEF type id_list . MK_SEMICOLON
   54 id_list: id_list . MK_COMMA ID
   55        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 37
    MK_SEMICOLON  shift, and go to state 65


State 44

   34 type_decl: TYPEDEF struct_type id_list . MK_SEMICOLON
   54 id_list: id_list . MK_COMMA ID
   55        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 37
    MK_SEMICOLON  shift, and go to state 66


State 45

   70 init_id: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    relop_expr     go to state 75
    relop_term     go to state 76
    relop_factor   go to state 77
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


State 46

    8 function_decl: type ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE $@2 block MK_RBRACE
   10              | type ID MK_LPAREN . MK_RPAREN MK_LBRACE $@3 block MK_RBRACE
   11              | type ID MK_LPAREN . param_list MK_RPAREN MK_SEMICOLON
   12              | type ID MK_LPAREN . MK_RPAREN MK_SEMICOLON

    error      shift, and go to state 5
    VOID       shift, and go to state 7
    INT        shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRUCT     shift, and go to state 10
    MK_RPAREN  shift, and go to state 82

    param_list   go to state 83
    param        go to state 84
    type         go to state 85
    struct_type  go to state 86


State 47

   58 dim_decl: dim_decl . MK_LB cexpr MK_RB
   69 init_id: ID dim_decl .

    MK_LB  shift, and go to state 57

    $default  reduce using rule 69 (init_id)


State 48

   67 init_id_list: init_id_list MK_COMMA . init_id

    ID  shift, and go to state 87

    init_id  go to state 88


State 49

   36 var_decl: type init_id_list MK_SEMICOLON .

    $default  reduce using rule 36 (var_decl)


State 50

   37 var_decl: struct_type id_list MK_SEMICOLON .

    $default  reduce using rule 37 (var_decl)


State 51

   63 cfactor: CONST .

    $default  reduce using rule 63 (cfactor)


State 52

   64 cfactor: CONSTF .

    $default  reduce using rule 64 (cfactor)


State 53

   65 cfactor: MK_LPAREN . cexpr MK_RPAREN

    CONST      shift, and go to state 51
    CONSTF     shift, and go to state 52
    MK_LPAREN  shift, and go to state 53

    cexpr    go to state 89
    mcexpr   go to state 55
    cfactor  go to state 56


State 54

   57 dim_decl: MK_LB cexpr . MK_RB
   59 cexpr: cexpr . add_op mcexpr

    OP_PLUS   shift, and go to state 90
    OP_MINUS  shift, and go to state 91
    MK_RB     shift, and go to state 92

    add_op  go to state 93


State 55

   60 cexpr: mcexpr .
   61 mcexpr: mcexpr . mul_op cfactor

    OP_TIMES   shift, and go to state 94
    OP_DIVIDE  shift, and go to state 95

    $default  reduce using rule 60 (cexpr)

    mul_op  go to state 96


State 56

   62 mcexpr: cfactor .

    $default  reduce using rule 62 (mcexpr)


State 57

   58 dim_decl: dim_decl MK_LB . cexpr MK_RB

    CONST      shift, and go to state 51
    CONSTF     shift, and go to state 52
    MK_LPAREN  shift, and go to state 53

    cexpr    go to state 97
    mcexpr   go to state 55
    cfactor  go to state 56


State 58

   54 id_list: id_list MK_COMMA ID .
   55        | id_list MK_COMMA ID . dim_decl

    MK_LB  shift, and go to state 35

    $default  reduce using rule 54 (id_list)

    dim_decl  go to state 98


State 59

   45 tag: ID MK_LBRACE $@4 . decl_list MK_RBRACE

    error    shift, and go to state 5
    ID       shift, and go to state 6
    VOID     shift, and go to state 7
    INT      shift, and go to state 8
    FLOAT    shift, and go to state 9
    STRUCT   shift, and go to state 10
    TYPEDEF  shift, and go to state 11

    decl_list    go to state 99
    decl         go to state 15
    type_decl    go to state 16
    var_decl     go to state 17
    type         go to state 62
    struct_type  go to state 19


State 60

   49 tag: ID MK_LBRACE $@6 . MK_RBRACE

    MK_RBRACE  shift, and go to state 100


State 61

   28 decl_list: decl_list . decl
   47 tag: MK_LBRACE $@5 decl_list . MK_RBRACE

    error      shift, and go to state 5
    ID         shift, and go to state 6
    VOID       shift, and go to state 7
    INT        shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRUCT     shift, and go to state 10
    TYPEDEF    shift, and go to state 11
    MK_RBRACE  shift, and go to state 101

    decl         go to state 29
    type_decl    go to state 16
    var_decl     go to state 17
    type         go to state 62
    struct_type  go to state 19


State 62

   36 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 87

    init_id_list  go to state 31
    init_id       go to state 32


State 63

   51 tag: MK_LBRACE $@7 MK_RBRACE .

    $default  reduce using rule 51 (tag)


State 64

   33 type_decl: TYPEDEF VOID id_list MK_SEMICOLON .

    $default  reduce using rule 33 (type_decl)


State 65

   32 type_decl: TYPEDEF type id_list MK_SEMICOLON .

    $default  reduce using rule 32 (type_decl)


State 66

   34 type_decl: TYPEDEF struct_type id_list MK_SEMICOLON .

    $default  reduce using rule 34 (type_decl)


State 67

   93 function_call: ID . MK_LPAREN relop_expr_list MK_RPAREN
  143 var_ref: ID .

    MK_LPAREN  shift, and go to state 102

    $default  reduce using rule 143 (var_ref)


State 68

  130 factor: CONST .

    $default  reduce using rule 130 (factor)


State 69

  142 factor: CONSTS .

    $default  reduce using rule 142 (factor)


State 70

  131 factor: CONSTF .

    $default  reduce using rule 131 (factor)


State 71

  128 factor: OP_NOT . MK_LPAREN relop_expr MK_RPAREN
  132       | OP_NOT . CONST
  133       | OP_NOT . CONSTF
  137       | OP_NOT . ID MK_LPAREN relop_expr_list MK_RPAREN
  140       | OP_NOT . var_ref

    ID         shift, and go to state 103
    CONST      shift, and go to state 104
    CONSTF     shift, and go to state 105
    MK_LPAREN  shift, and go to state 106

    var_ref  go to state 107


State 72

  129 factor: OP_MINUS . MK_LPAREN relop_expr MK_RPAREN
  134       | OP_MINUS . CONST
  135       | OP_MINUS . CONSTF
  138       | OP_MINUS . ID MK_LPAREN relop_expr_list MK_RPAREN
  141       | OP_MINUS . var_ref

    ID         shift, and go to state 108
    CONST      shift, and go to state 109
    CONSTF     shift, and go to state 110
    MK_LPAREN  shift, and go to state 111

    var_ref  go to state 112


State 73

  127 factor: MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    relop_expr     go to state 113
    relop_term     go to state 76
    relop_factor   go to state 77
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


State 74

  136 factor: function_call .

    $default  reduce using rule 136 (factor)


State 75

   70 init_id: ID OP_ASSIGN relop_expr .
  102 relop_expr: relop_expr . op_or relop_term

    OP_OR  shift, and go to state 114

    $default  reduce using rule 70 (init_id)

    op_or  go to state 115


State 76

  101 relop_expr: relop_term .
  105 relop_term: relop_term . op_and relop_factor

    OP_AND  shift, and go to state 116

    $default  reduce using rule 101 (relop_expr)

    op_and  go to state 117


State 77

  104 relop_term: relop_factor .

    $default  reduce using rule 104 (relop_term)


State 78

  107 relop_factor: expr .
  108             | expr . rel_op expr
  119 expr: expr . add_op term

    OP_EQ     shift, and go to state 118
    OP_NE     shift, and go to state 119
    OP_GT     shift, and go to state 120
    OP_LT     shift, and go to state 121
    OP_GE     shift, and go to state 122
    OP_LE     shift, and go to state 123
    OP_PLUS   shift, and go to state 90
    OP_MINUS  shift, and go to state 91

    $default  reduce using rule 107 (relop_factor)

    rel_op  go to state 124
    add_op  go to state 125


State 79

  120 expr: term .
  123 term: term . mul_op factor

    OP_TIMES   shift, and go to state 94
    OP_DIVIDE  shift, and go to state 95

    $default  reduce using rule 120 (expr)

    mul_op  go to state 126


State 80

  124 term: factor .

    $default  reduce using rule 124 (term)


State 81

  139 factor: var_ref .
  144 var_ref: var_ref . var_ref_dim
  145        | var_ref . struct_tail

    MK_LB   shift, and go to state 127
    MK_DOT  shift, and go to state 128

    $default  reduce using rule 139 (factor)

    var_ref_dim  go to state 129
    dim          go to state 130
    struct_tail  go to state 131


State 82

   10 function_decl: type ID MK_LPAREN MK_RPAREN . MK_LBRACE $@3 block MK_RBRACE
   12              | type ID MK_LPAREN MK_RPAREN . MK_SEMICOLON

    MK_LBRACE     shift, and go to state 132
    MK_SEMICOLON  shift, and go to state 133


State 83

    8 function_decl: type ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE $@2 block MK_RBRACE
   11              | type ID MK_LPAREN param_list . MK_RPAREN MK_SEMICOLON
   13 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 134
    MK_COMMA   shift, and go to state 135


State 84

   14 param_list: param .

    $default  reduce using rule 14 (param_list)


State 85

   15 param: type . ID
   17      | type . ID dim_fn

    ID  shift, and go to state 136


State 86

   16 param: struct_type . ID
   18      | struct_type . ID dim_fn

    ID  shift, and go to state 137


State 87

   68 init_id: ID .
   69        | ID . dim_decl
   70        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 45
    MK_LB      shift, and go to state 35

    $default  reduce using rule 68 (init_id)

    dim_decl  go to state 47


State 88

   67 init_id_list: init_id_list MK_COMMA init_id .

    $default  reduce using rule 67 (init_id_list)


State 89

   59 cexpr: cexpr . add_op mcexpr
   65 cfactor: MK_LPAREN cexpr . MK_RPAREN

    OP_PLUS    shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_RPAREN  shift, and go to state 138

    add_op  go to state 93


State 90

  121 add_op: OP_PLUS .

    $default  reduce using rule 121 (add_op)


State 91

  122 add_op: OP_MINUS .

    $default  reduce using rule 122 (add_op)


State 92

   57 dim_decl: MK_LB cexpr MK_RB .

    $default  reduce using rule 57 (dim_decl)


State 93

   59 cexpr: cexpr add_op . mcexpr

    CONST      shift, and go to state 51
    CONSTF     shift, and go to state 52
    MK_LPAREN  shift, and go to state 53

    mcexpr   go to state 139
    cfactor  go to state 56


State 94

  125 mul_op: OP_TIMES .

    $default  reduce using rule 125 (mul_op)


State 95

  126 mul_op: OP_DIVIDE .

    $default  reduce using rule 126 (mul_op)


State 96

   61 mcexpr: mcexpr mul_op . cfactor

    CONST      shift, and go to state 51
    CONSTF     shift, and go to state 52
    MK_LPAREN  shift, and go to state 53

    cfactor  go to state 140


State 97

   58 dim_decl: dim_decl MK_LB cexpr . MK_RB
   59 cexpr: cexpr . add_op mcexpr

    OP_PLUS   shift, and go to state 90
    OP_MINUS  shift, and go to state 91
    MK_RB     shift, and go to state 141

    add_op  go to state 93


State 98

   55 id_list: id_list MK_COMMA ID dim_decl .
   58 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 57

    $default  reduce using rule 55 (id_list)


State 99

   28 decl_list: decl_list . decl
   45 tag: ID MK_LBRACE $@4 decl_list . MK_RBRACE

    error      shift, and go to state 5
    ID         shift, and go to state 6
    VOID       shift, and go to state 7
    INT        shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRUCT     shift, and go to state 10
    TYPEDEF    shift, and go to state 11
    MK_RBRACE  shift, and go to state 142

    decl         go to state 29
    type_decl    go to state 16
    var_decl     go to state 17
    type         go to state 62
    struct_type  go to state 19


State 100

   49 tag: ID MK_LBRACE $@6 MK_RBRACE .

    $default  reduce using rule 49 (tag)


State 101

   47 tag: MK_LBRACE $@5 decl_list MK_RBRACE .

    $default  reduce using rule 47 (tag)


State 102

   93 function_call: ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    $default  reduce using rule 116 (relop_expr_list)

    function_call             go to state 74
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 144
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 81


State 103

  137 factor: OP_NOT ID . MK_LPAREN relop_expr_list MK_RPAREN
  143 var_ref: ID .

    MK_LPAREN  shift, and go to state 146

    $default  reduce using rule 143 (var_ref)


State 104

  132 factor: OP_NOT CONST .

    $default  reduce using rule 132 (factor)


State 105

  133 factor: OP_NOT CONSTF .

    $default  reduce using rule 133 (factor)


State 106

  128 factor: OP_NOT MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    relop_expr     go to state 147
    relop_term     go to state 76
    relop_factor   go to state 77
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


State 107

  140 factor: OP_NOT var_ref .
  144 var_ref: var_ref . var_ref_dim
  145        | var_ref . struct_tail

    MK_LB   shift, and go to state 127
    MK_DOT  shift, and go to state 128

    $default  reduce using rule 140 (factor)

    var_ref_dim  go to state 129
    dim          go to state 130
    struct_tail  go to state 131


State 108

  138 factor: OP_MINUS ID . MK_LPAREN relop_expr_list MK_RPAREN
  143 var_ref: ID .

    MK_LPAREN  shift, and go to state 148

    $default  reduce using rule 143 (var_ref)


State 109

  134 factor: OP_MINUS CONST .

    $default  reduce using rule 134 (factor)


State 110

  135 factor: OP_MINUS CONSTF .

    $default  reduce using rule 135 (factor)


State 111

  129 factor: OP_MINUS MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    relop_expr     go to state 149
    relop_term     go to state 76
    relop_factor   go to state 77
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


State 112

  141 factor: OP_MINUS var_ref .
  144 var_ref: var_ref . var_ref_dim
  145        | var_ref . struct_tail

    MK_LB   shift, and go to state 127
    MK_DOT  shift, and go to state 128

    $default  reduce using rule 141 (factor)

    var_ref_dim  go to state 129
    dim          go to state 130
    struct_tail  go to state 131


State 113

  102 relop_expr: relop_expr . op_or relop_term
  127 factor: MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 114
    MK_RPAREN  shift, and go to state 150

    op_or  go to state 115


State 114

  103 op_or: OP_OR .

    $default  reduce using rule 103 (op_or)


State 115

  102 relop_expr: relop_expr op_or . relop_term

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    relop_term     go to state 151
    relop_factor   go to state 77
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


State 116

  106 op_and: OP_AND .

    $default  reduce using rule 106 (op_and)


State 117

  105 relop_term: relop_term op_and . relop_factor

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    relop_factor   go to state 152
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


State 118

  113 rel_op: OP_EQ .

    $default  reduce using rule 113 (rel_op)


State 119

  114 rel_op: OP_NE .

    $default  reduce using rule 114 (rel_op)


State 120

  111 rel_op: OP_GT .

    $default  reduce using rule 111 (rel_op)


State 121

  109 rel_op: OP_LT .

    $default  reduce using rule 109 (rel_op)


State 122

  112 rel_op: OP_GE .

    $default  reduce using rule 112 (rel_op)


State 123

  110 rel_op: OP_LE .

    $default  reduce using rule 110 (rel_op)


State 124

  108 relop_factor: expr rel_op . expr

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    expr           go to state 153
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


State 125

  119 expr: expr add_op . term

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    term           go to state 154
    factor         go to state 80
    var_ref        go to state 81


State 126

  123 term: term mul_op . factor

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    factor         go to state 155
    var_ref        go to state 81


State 127

  148 dim: MK_LB . expr MK_RB

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    expr           go to state 156
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


State 128

  149 struct_tail: MK_DOT . ID

    ID  shift, and go to state 157


State 129

  144 var_ref: var_ref var_ref_dim .

    $default  reduce using rule 144 (var_ref)


State 130

  146 var_ref_dim: dim .
  147            | dim . var_ref_dim

    MK_LB  shift, and go to state 127

    MK_LB     [reduce using rule 146 (var_ref_dim)]
    $default  reduce using rule 146 (var_ref_dim)

    var_ref_dim  go to state 158
    dim          go to state 130


State 131

  145 var_ref: var_ref struct_tail .

    $default  reduce using rule 145 (var_ref)


State 132

   10 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE . $@3 block MK_RBRACE

    $default  reduce using rule 9 ($@3)

    $@3  go to state 159


State 133

   12 function_decl: type ID MK_LPAREN MK_RPAREN MK_SEMICOLON .

    $default  reduce using rule 12 (function_decl)


State 134

    8 function_decl: type ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE $@2 block MK_RBRACE
   11              | type ID MK_LPAREN param_list MK_RPAREN . MK_SEMICOLON

    MK_LBRACE     shift, and go to state 160
    MK_SEMICOLON  shift, and go to state 161


State 135

   13 param_list: param_list MK_COMMA . param

    error   shift, and go to state 5
    VOID    shift, and go to state 7
    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    STRUCT  shift, and go to state 10

    param        go to state 162
    type         go to state 85
    struct_type  go to state 86


State 136

   15 param: type ID .
   17      | type ID . dim_fn

    MK_LB  shift, and go to state 163

    $default  reduce using rule 15 (param)

    dim_fn  go to state 164


State 137

   16 param: struct_type ID .
   18      | struct_type ID . dim_fn

    MK_LB  shift, and go to state 163

    $default  reduce using rule 16 (param)

    dim_fn  go to state 165


State 138

   65 cfactor: MK_LPAREN cexpr MK_RPAREN .

    $default  reduce using rule 65 (cfactor)


State 139

   59 cexpr: cexpr add_op mcexpr .
   61 mcexpr: mcexpr . mul_op cfactor

    OP_TIMES   shift, and go to state 94
    OP_DIVIDE  shift, and go to state 95

    $default  reduce using rule 59 (cexpr)

    mul_op  go to state 96


State 140

   61 mcexpr: mcexpr mul_op cfactor .

    $default  reduce using rule 61 (mcexpr)


State 141

   58 dim_decl: dim_decl MK_LB cexpr MK_RB .

    $default  reduce using rule 58 (dim_decl)


State 142

   45 tag: ID MK_LBRACE $@4 decl_list MK_RBRACE .

    $default  reduce using rule 45 (tag)


State 143

  102 relop_expr: relop_expr . op_or relop_term
  118 nonempty_relop_expr_list: relop_expr .

    OP_OR  shift, and go to state 114

    $default  reduce using rule 118 (nonempty_relop_expr_list)

    op_or  go to state 115


State 144

   93 function_call: ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 166


State 145

  115 relop_expr_list: nonempty_relop_expr_list .
  117 nonempty_relop_expr_list: nonempty_relop_expr_list . MK_COMMA relop_expr

    MK_COMMA  shift, and go to state 167

    $default  reduce using rule 115 (relop_expr_list)


State 146

  137 factor: OP_NOT ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    $default  reduce using rule 116 (relop_expr_list)

    function_call             go to state 74
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 168
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 81


State 147

  102 relop_expr: relop_expr . op_or relop_term
  128 factor: OP_NOT MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 114
    MK_RPAREN  shift, and go to state 169

    op_or  go to state 115


State 148

  138 factor: OP_MINUS ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    $default  reduce using rule 116 (relop_expr_list)

    function_call             go to state 74
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 170
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 81


State 149

  102 relop_expr: relop_expr . op_or relop_term
  129 factor: OP_MINUS MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 114
    MK_RPAREN  shift, and go to state 171

    op_or  go to state 115


State 150

  127 factor: MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 127 (factor)


State 151

  102 relop_expr: relop_expr op_or relop_term .
  105 relop_term: relop_term . op_and relop_factor

    OP_AND  shift, and go to state 116

    $default  reduce using rule 102 (relop_expr)

    op_and  go to state 117


State 152

  105 relop_term: relop_term op_and relop_factor .

    $default  reduce using rule 105 (relop_term)


State 153

  108 relop_factor: expr rel_op expr .
  119 expr: expr . add_op term

    OP_PLUS   shift, and go to state 90
    OP_MINUS  shift, and go to state 91

    $default  reduce using rule 108 (relop_factor)

    add_op  go to state 125


State 154

  119 expr: expr add_op term .
  123 term: term . mul_op factor

    OP_TIMES   shift, and go to state 94
    OP_DIVIDE  shift, and go to state 95

    $default  reduce using rule 119 (expr)

    mul_op  go to state 126


State 155

  123 term: term mul_op factor .

    $default  reduce using rule 123 (term)


State 156

  119 expr: expr . add_op term
  148 dim: MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 90
    OP_MINUS  shift, and go to state 91
    MK_RB     shift, and go to state 172

    add_op  go to state 125


State 157

  149 struct_tail: MK_DOT ID .

    $default  reduce using rule 149 (struct_tail)


State 158

  147 var_ref_dim: dim var_ref_dim .

    $default  reduce using rule 147 (var_ref_dim)


State 159

   10 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE $@3 . block MK_RBRACE

    error         shift, and go to state 5
    ID            shift, and go to state 173
    CONST         shift, and go to state 68
    CONSTS        shift, and go to state 69
    CONSTF        shift, and go to state 70
    VOID          shift, and go to state 7
    INT           shift, and go to state 8
    FLOAT         shift, and go to state 9
    IF            shift, and go to state 174
    WHILE         shift, and go to state 175
    FOR           shift, and go to state 176
    STRUCT        shift, and go to state 10
    TYPEDEF       shift, and go to state 11
    OP_NOT        shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    MK_LPAREN     shift, and go to state 73
    MK_LBRACE     shift, and go to state 177
    MK_SEMICOLON  shift, and go to state 178
    RETURN        shift, and go to state 179

    MK_RBRACE     reduce using rule 27 (block)
    MK_SEMICOLON  [reduce using rule 116 (relop_expr_list)]

    block                     go to state 180
    decl_list                 go to state 181
    decl                      go to state 15
    type_decl                 go to state 16
    var_decl                  go to state 17
    type                      go to state 62
    struct_type               go to state 19
    stmt_list                 go to state 182
    stmt                      go to state 183
    if_stmt                   go to state 184
    function_call             go to state 185
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 186
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 187


State 160

    8 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . $@2 block MK_RBRACE

    $default  reduce using rule 7 ($@2)

    $@2  go to state 188


State 161

   11 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_SEMICOLON .

    $default  reduce using rule 11 (function_decl)


State 162

   13 param_list: param_list MK_COMMA param .

    $default  reduce using rule 13 (param_list)


State 163

   19 dim_fn: MK_LB . expr_null MK_RB dimfn1

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    $default  reduce using rule 23 (expr_null)

    expr_null      go to state 189
    function_call  go to state 74
    expr           go to state 190
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


State 164

   17 param: type ID dim_fn .

    $default  reduce using rule 17 (param)


State 165

   18 param: struct_type ID dim_fn .

    $default  reduce using rule 18 (param)


State 166

   93 function_call: ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 93 (function_call)


State 167

  117 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA . relop_expr

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    relop_expr     go to state 191
    relop_term     go to state 76
    relop_factor   go to state 77
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


State 168

  137 factor: OP_NOT ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 192


State 169

  128 factor: OP_NOT MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 128 (factor)


State 170

  138 factor: OP_MINUS ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 193


State 171

  129 factor: OP_MINUS MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 129 (factor)


State 172

  148 dim: MK_LB expr MK_RB .

    $default  reduce using rule 148 (dim)


State 173

   38 var_decl: ID . id_list MK_SEMICOLON
   93 function_call: ID . MK_LPAREN relop_expr_list MK_RPAREN
  143 var_ref: ID .

    ID         shift, and go to state 20
    MK_LPAREN  shift, and go to state 102

    $default  reduce using rule 143 (var_ref)

    id_list  go to state 21


State 174

   92 if_stmt: IF . $@15 MK_LPAREN relop_expr MK_RPAREN

    $default  reduce using rule 91 ($@15)

    $@15  go to state 194


State 175

   77 stmt: WHILE . $@9 MK_LPAREN relop_expr_list $@10 MK_RPAREN stmt

    $default  reduce using rule 75 ($@9)

    $@9  go to state 195


State 176

   81 stmt: FOR . MK_LPAREN assign_expr_list MK_SEMICOLON $@11 relop_expr_list MK_SEMICOLON $@12 assign_expr_list MK_RPAREN $@13 stmt

    MK_LPAREN  shift, and go to state 196


State 177

   74 stmt: MK_LBRACE . $@8 block MK_RBRACE

    $default  reduce using rule 73 ($@8)

    $@8  go to state 197


State 178

   88 stmt: MK_SEMICOLON .

    $default  reduce using rule 88 (stmt)


State 179

   89 stmt: RETURN . MK_SEMICOLON
   90     | RETURN . relop_expr MK_SEMICOLON

    ID            shift, and go to state 67
    CONST         shift, and go to state 68
    CONSTS        shift, and go to state 69
    CONSTF        shift, and go to state 70
    OP_NOT        shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    MK_LPAREN     shift, and go to state 73
    MK_SEMICOLON  shift, and go to state 198

    function_call  go to state 74
    relop_expr     go to state 199
    relop_term     go to state 76
    relop_factor   go to state 77
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


State 180

   10 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE $@3 block . MK_RBRACE

    MK_RBRACE  shift, and go to state 200


State 181

   24 block: decl_list . stmt_list
   26      | decl_list .
   28 decl_list: decl_list . decl

    error         shift, and go to state 5
    ID            shift, and go to state 173
    CONST         shift, and go to state 68
    CONSTS        shift, and go to state 69
    CONSTF        shift, and go to state 70
    VOID          shift, and go to state 7
    INT           shift, and go to state 8
    FLOAT         shift, and go to state 9
    IF            shift, and go to state 174
    WHILE         shift, and go to state 175
    FOR           shift, and go to state 176
    STRUCT        shift, and go to state 10
    TYPEDEF       shift, and go to state 11
    OP_NOT        shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    MK_LPAREN     shift, and go to state 73
    MK_LBRACE     shift, and go to state 177
    MK_SEMICOLON  shift, and go to state 178
    RETURN        shift, and go to state 179

    MK_RBRACE     reduce using rule 26 (block)
    MK_SEMICOLON  [reduce using rule 116 (relop_expr_list)]

    decl                      go to state 29
    type_decl                 go to state 16
    var_decl                  go to state 17
    type                      go to state 62
    struct_type               go to state 19
    stmt_list                 go to state 201
    stmt                      go to state 183
    if_stmt                   go to state 184
    function_call             go to state 185
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 186
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 187


State 182

   25 block: stmt_list .
   71 stmt_list: stmt_list . stmt

    ID            shift, and go to state 67
    CONST         shift, and go to state 68
    CONSTS        shift, and go to state 69
    CONSTF        shift, and go to state 70
    IF            shift, and go to state 174
    WHILE         shift, and go to state 175
    FOR           shift, and go to state 176
    OP_NOT        shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    MK_LPAREN     shift, and go to state 73
    MK_LBRACE     shift, and go to state 177
    MK_SEMICOLON  shift, and go to state 178
    RETURN        shift, and go to state 179

    MK_SEMICOLON  [reduce using rule 116 (relop_expr_list)]
    $default      reduce using rule 25 (block)

    stmt                      go to state 202
    if_stmt                   go to state 184
    function_call             go to state 185
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 186
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 187


State 183

   72 stmt_list: stmt .

    $default  reduce using rule 72 (stmt_list)


State 184

   83 stmt: if_stmt . stmt ELSE $@14 stmt
   84     | if_stmt . stmt

    ID            shift, and go to state 67
    CONST         shift, and go to state 68
    CONSTS        shift, and go to state 69
    CONSTF        shift, and go to state 70
    IF            shift, and go to state 174
    WHILE         shift, and go to state 175
    FOR           shift, and go to state 176
    OP_NOT        shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    MK_LPAREN     shift, and go to state 73
    MK_LBRACE     shift, and go to state 177
    MK_SEMICOLON  shift, and go to state 178
    RETURN        shift, and go to state 179

    MK_SEMICOLON  [reduce using rule 116 (relop_expr_list)]

    stmt                      go to state 203
    if_stmt                   go to state 184
    function_call             go to state 185
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 186
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 187


State 185

   85 stmt: function_call .
  136 factor: function_call .

    OP_OR         reduce using rule 136 (factor)
    OP_AND        reduce using rule 136 (factor)
    OP_EQ         reduce using rule 136 (factor)
    OP_NE         reduce using rule 136 (factor)
    OP_GT         reduce using rule 136 (factor)
    OP_LT         reduce using rule 136 (factor)
    OP_GE         reduce using rule 136 (factor)
    OP_LE         reduce using rule 136 (factor)
    OP_PLUS       reduce using rule 136 (factor)
    OP_MINUS      reduce using rule 85 (stmt)
    OP_MINUS      [reduce using rule 136 (factor)]
    OP_TIMES      reduce using rule 136 (factor)
    OP_DIVIDE     reduce using rule 136 (factor)
    MK_COMMA      reduce using rule 136 (factor)
    MK_SEMICOLON  reduce using rule 85 (stmt)
    MK_SEMICOLON  [reduce using rule 136 (factor)]
    $default      reduce using rule 85 (stmt)


State 186

   87 stmt: relop_expr_list . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 204


State 187

   86 stmt: var_ref . OP_ASSIGN relop_expr MK_SEMICOLON
  139 factor: var_ref .
  144 var_ref: var_ref . var_ref_dim
  145        | var_ref . struct_tail

    OP_ASSIGN  shift, and go to state 205
    MK_LB      shift, and go to state 127
    MK_DOT     shift, and go to state 128

    $default  reduce using rule 139 (factor)

    var_ref_dim  go to state 129
    dim          go to state 130
    struct_tail  go to state 131


State 188

    8 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE $@2 . block MK_RBRACE

    error         shift, and go to state 5
    ID            shift, and go to state 173
    CONST         shift, and go to state 68
    CONSTS        shift, and go to state 69
    CONSTF        shift, and go to state 70
    VOID          shift, and go to state 7
    INT           shift, and go to state 8
    FLOAT         shift, and go to state 9
    IF            shift, and go to state 174
    WHILE         shift, and go to state 175
    FOR           shift, and go to state 176
    STRUCT        shift, and go to state 10
    TYPEDEF       shift, and go to state 11
    OP_NOT        shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    MK_LPAREN     shift, and go to state 73
    MK_LBRACE     shift, and go to state 177
    MK_SEMICOLON  shift, and go to state 178
    RETURN        shift, and go to state 179

    MK_RBRACE     reduce using rule 27 (block)
    MK_SEMICOLON  [reduce using rule 116 (relop_expr_list)]

    block                     go to state 206
    decl_list                 go to state 181
    decl                      go to state 15
    type_decl                 go to state 16
    var_decl                  go to state 17
    type                      go to state 62
    struct_type               go to state 19
    stmt_list                 go to state 182
    stmt                      go to state 183
    if_stmt                   go to state 184
    function_call             go to state 185
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 186
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 187


State 189

   19 dim_fn: MK_LB expr_null . MK_RB dimfn1

    MK_RB  shift, and go to state 207


State 190

   22 expr_null: expr .
  119 expr: expr . add_op term

    OP_PLUS   shift, and go to state 90
    OP_MINUS  shift, and go to state 91

    $default  reduce using rule 22 (expr_null)

    add_op  go to state 125


State 191

  102 relop_expr: relop_expr . op_or relop_term
  117 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr .

    OP_OR  shift, and go to state 114

    $default  reduce using rule 117 (nonempty_relop_expr_list)

    op_or  go to state 115


State 192

  137 factor: OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 137 (factor)


State 193

  138 factor: OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 138 (factor)


State 194

   92 if_stmt: IF $@15 . MK_LPAREN relop_expr MK_RPAREN

    MK_LPAREN  shift, and go to state 208


State 195

   77 stmt: WHILE $@9 . MK_LPAREN relop_expr_list $@10 MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 209


State 196

   81 stmt: FOR MK_LPAREN . assign_expr_list MK_SEMICOLON $@11 relop_expr_list MK_SEMICOLON $@12 assign_expr_list MK_RPAREN $@13 stmt

    ID         shift, and go to state 210
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    $default  reduce using rule 95 (assign_expr_list)

    function_call              go to state 74
    assign_expr_list           go to state 211
    nonempty_assign_expr_list  go to state 212
    assign_expr                go to state 213
    relop_expr                 go to state 214
    relop_term                 go to state 76
    relop_factor               go to state 77
    expr                       go to state 78
    term                       go to state 79
    factor                     go to state 80
    var_ref                    go to state 81


State 197

   74 stmt: MK_LBRACE $@8 . block MK_RBRACE

    error         shift, and go to state 5
    ID            shift, and go to state 173
    CONST         shift, and go to state 68
    CONSTS        shift, and go to state 69
    CONSTF        shift, and go to state 70
    VOID          shift, and go to state 7
    INT           shift, and go to state 8
    FLOAT         shift, and go to state 9
    IF            shift, and go to state 174
    WHILE         shift, and go to state 175
    FOR           shift, and go to state 176
    STRUCT        shift, and go to state 10
    TYPEDEF       shift, and go to state 11
    OP_NOT        shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    MK_LPAREN     shift, and go to state 73
    MK_LBRACE     shift, and go to state 177
    MK_SEMICOLON  shift, and go to state 178
    RETURN        shift, and go to state 179

    MK_RBRACE     reduce using rule 27 (block)
    MK_SEMICOLON  [reduce using rule 116 (relop_expr_list)]

    block                     go to state 215
    decl_list                 go to state 181
    decl                      go to state 15
    type_decl                 go to state 16
    var_decl                  go to state 17
    type                      go to state 62
    struct_type               go to state 19
    stmt_list                 go to state 182
    stmt                      go to state 183
    if_stmt                   go to state 184
    function_call             go to state 185
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 186
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 187


State 198

   89 stmt: RETURN MK_SEMICOLON .

    $default  reduce using rule 89 (stmt)


State 199

   90 stmt: RETURN relop_expr . MK_SEMICOLON
  102 relop_expr: relop_expr . op_or relop_term

    OP_OR         shift, and go to state 114
    MK_SEMICOLON  shift, and go to state 216

    op_or  go to state 115


State 200

   10 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE $@3 block MK_RBRACE .

    $default  reduce using rule 10 (function_decl)


State 201

   24 block: decl_list stmt_list .
   71 stmt_list: stmt_list . stmt

    ID            shift, and go to state 67
    CONST         shift, and go to state 68
    CONSTS        shift, and go to state 69
    CONSTF        shift, and go to state 70
    IF            shift, and go to state 174
    WHILE         shift, and go to state 175
    FOR           shift, and go to state 176
    OP_NOT        shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    MK_LPAREN     shift, and go to state 73
    MK_LBRACE     shift, and go to state 177
    MK_SEMICOLON  shift, and go to state 178
    RETURN        shift, and go to state 179

    MK_SEMICOLON  [reduce using rule 116 (relop_expr_list)]
    $default      reduce using rule 24 (block)

    stmt                      go to state 202
    if_stmt                   go to state 184
    function_call             go to state 185
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 186
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 187


State 202

   71 stmt_list: stmt_list stmt .

    $default  reduce using rule 71 (stmt_list)


State 203

   83 stmt: if_stmt stmt . ELSE $@14 stmt
   84     | if_stmt stmt .

    ELSE  shift, and go to state 217

    ELSE      [reduce using rule 84 (stmt)]
    $default  reduce using rule 84 (stmt)


State 204

   87 stmt: relop_expr_list MK_SEMICOLON .

    $default  reduce using rule 87 (stmt)


State 205

   86 stmt: var_ref OP_ASSIGN . relop_expr MK_SEMICOLON

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    relop_expr     go to state 218
    relop_term     go to state 76
    relop_factor   go to state 77
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


State 206

    8 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE $@2 block . MK_RBRACE

    MK_RBRACE  shift, and go to state 219


State 207

   19 dim_fn: MK_LB expr_null MK_RB . dimfn1

    MK_LB  shift, and go to state 220

    $default  reduce using rule 21 (dimfn1)

    dimfn1  go to state 221


State 208

   92 if_stmt: IF $@15 MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    relop_expr     go to state 222
    relop_term     go to state 76
    relop_factor   go to state 77
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


State 209

   77 stmt: WHILE $@9 MK_LPAREN . relop_expr_list $@10 MK_RPAREN stmt

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    $default  reduce using rule 116 (relop_expr_list)

    function_call             go to state 74
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 223
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 81


State 210

   93 function_call: ID . MK_LPAREN relop_expr_list MK_RPAREN
   99 assign_expr: ID . $@16 OP_ASSIGN relop_expr
  143 var_ref: ID .

    MK_LPAREN  shift, and go to state 102

    OP_ASSIGN  reduce using rule 98 ($@16)
    $default   reduce using rule 143 (var_ref)

    $@16  go to state 224


State 211

   81 stmt: FOR MK_LPAREN assign_expr_list . MK_SEMICOLON $@11 relop_expr_list MK_SEMICOLON $@12 assign_expr_list MK_RPAREN $@13 stmt

    MK_SEMICOLON  shift, and go to state 225


State 212

   94 assign_expr_list: nonempty_assign_expr_list .
   96 nonempty_assign_expr_list: nonempty_assign_expr_list . MK_COMMA assign_expr

    MK_COMMA  shift, and go to state 226

    $default  reduce using rule 94 (assign_expr_list)


State 213

   97 nonempty_assign_expr_list: assign_expr .

    $default  reduce using rule 97 (nonempty_assign_expr_list)


State 214

  100 assign_expr: relop_expr .
  102 relop_expr: relop_expr . op_or relop_term

    OP_OR  shift, and go to state 114

    $default  reduce using rule 100 (assign_expr)

    op_or  go to state 115


State 215

   74 stmt: MK_LBRACE $@8 block . MK_RBRACE

    MK_RBRACE  shift, and go to state 227


State 216

   90 stmt: RETURN relop_expr MK_SEMICOLON .

    $default  reduce using rule 90 (stmt)


State 217

   83 stmt: if_stmt stmt ELSE . $@14 stmt

    $default  reduce using rule 82 ($@14)

    $@14  go to state 228


State 218

   86 stmt: var_ref OP_ASSIGN relop_expr . MK_SEMICOLON
  102 relop_expr: relop_expr . op_or relop_term

    OP_OR         shift, and go to state 114
    MK_SEMICOLON  shift, and go to state 229

    op_or  go to state 115


State 219

    8 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE $@2 block MK_RBRACE .

    $default  reduce using rule 8 (function_decl)


State 220

   20 dimfn1: MK_LB . expr MK_RB dimfn1

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    expr           go to state 230
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


State 221

   19 dim_fn: MK_LB expr_null MK_RB dimfn1 .

    $default  reduce using rule 19 (dim_fn)


State 222

   92 if_stmt: IF $@15 MK_LPAREN relop_expr . MK_RPAREN
  102 relop_expr: relop_expr . op_or relop_term

    OP_OR      shift, and go to state 114
    MK_RPAREN  shift, and go to state 231

    op_or  go to state 115


State 223

   77 stmt: WHILE $@9 MK_LPAREN relop_expr_list . $@10 MK_RPAREN stmt

    $default  reduce using rule 76 ($@10)

    $@10  go to state 232


State 224

   99 assign_expr: ID $@16 . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 233


State 225

   81 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON . $@11 relop_expr_list MK_SEMICOLON $@12 assign_expr_list MK_RPAREN $@13 stmt

    $default  reduce using rule 78 ($@11)

    $@11  go to state 234


State 226

   96 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA . assign_expr

    ID         shift, and go to state 210
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    assign_expr    go to state 235
    relop_expr     go to state 214
    relop_term     go to state 76
    relop_factor   go to state 77
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


State 227

   74 stmt: MK_LBRACE $@8 block MK_RBRACE .

    $default  reduce using rule 74 (stmt)


State 228

   83 stmt: if_stmt stmt ELSE $@14 . stmt

    ID            shift, and go to state 67
    CONST         shift, and go to state 68
    CONSTS        shift, and go to state 69
    CONSTF        shift, and go to state 70
    IF            shift, and go to state 174
    WHILE         shift, and go to state 175
    FOR           shift, and go to state 176
    OP_NOT        shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    MK_LPAREN     shift, and go to state 73
    MK_LBRACE     shift, and go to state 177
    MK_SEMICOLON  shift, and go to state 178
    RETURN        shift, and go to state 179

    MK_SEMICOLON  [reduce using rule 116 (relop_expr_list)]

    stmt                      go to state 236
    if_stmt                   go to state 184
    function_call             go to state 185
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 186
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 187


State 229

   86 stmt: var_ref OP_ASSIGN relop_expr MK_SEMICOLON .

    $default  reduce using rule 86 (stmt)


State 230

   20 dimfn1: MK_LB expr . MK_RB dimfn1
  119 expr: expr . add_op term

    OP_PLUS   shift, and go to state 90
    OP_MINUS  shift, and go to state 91
    MK_RB     shift, and go to state 237

    add_op  go to state 125


State 231

   92 if_stmt: IF $@15 MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 92 (if_stmt)


State 232

   77 stmt: WHILE $@9 MK_LPAREN relop_expr_list $@10 . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 238


State 233

   99 assign_expr: ID $@16 OP_ASSIGN . relop_expr

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    function_call  go to state 74
    relop_expr     go to state 239
    relop_term     go to state 76
    relop_factor   go to state 77
    expr           go to state 78
    term           go to state 79
    factor         go to state 80
    var_ref        go to state 81


State 234

   81 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON $@11 . relop_expr_list MK_SEMICOLON $@12 assign_expr_list MK_RPAREN $@13 stmt

    ID         shift, and go to state 67
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    $default  reduce using rule 116 (relop_expr_list)

    function_call             go to state 74
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 240
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 81


State 235

   96 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr .

    $default  reduce using rule 96 (nonempty_assign_expr_list)


State 236

   83 stmt: if_stmt stmt ELSE $@14 stmt .

    $default  reduce using rule 83 (stmt)


State 237

   20 dimfn1: MK_LB expr MK_RB . dimfn1

    MK_LB  shift, and go to state 220

    $default  reduce using rule 21 (dimfn1)

    dimfn1  go to state 241


State 238

   77 stmt: WHILE $@9 MK_LPAREN relop_expr_list $@10 MK_RPAREN . stmt

    ID            shift, and go to state 67
    CONST         shift, and go to state 68
    CONSTS        shift, and go to state 69
    CONSTF        shift, and go to state 70
    IF            shift, and go to state 174
    WHILE         shift, and go to state 175
    FOR           shift, and go to state 176
    OP_NOT        shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    MK_LPAREN     shift, and go to state 73
    MK_LBRACE     shift, and go to state 177
    MK_SEMICOLON  shift, and go to state 178
    RETURN        shift, and go to state 179

    MK_SEMICOLON  [reduce using rule 116 (relop_expr_list)]

    stmt                      go to state 242
    if_stmt                   go to state 184
    function_call             go to state 185
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 186
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 187


State 239

   99 assign_expr: ID $@16 OP_ASSIGN relop_expr .
  102 relop_expr: relop_expr . op_or relop_term

    OP_OR  shift, and go to state 114

    $default  reduce using rule 99 (assign_expr)

    op_or  go to state 115


State 240

   81 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON $@11 relop_expr_list . MK_SEMICOLON $@12 assign_expr_list MK_RPAREN $@13 stmt

    MK_SEMICOLON  shift, and go to state 243


State 241

   20 dimfn1: MK_LB expr MK_RB dimfn1 .

    $default  reduce using rule 20 (dimfn1)


State 242

   77 stmt: WHILE $@9 MK_LPAREN relop_expr_list $@10 MK_RPAREN stmt .

    $default  reduce using rule 77 (stmt)


State 243

   81 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON $@11 relop_expr_list MK_SEMICOLON . $@12 assign_expr_list MK_RPAREN $@13 stmt

    $default  reduce using rule 79 ($@12)

    $@12  go to state 244


State 244

   81 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON $@11 relop_expr_list MK_SEMICOLON $@12 . assign_expr_list MK_RPAREN $@13 stmt

    ID         shift, and go to state 210
    CONST      shift, and go to state 68
    CONSTS     shift, and go to state 69
    CONSTF     shift, and go to state 70
    OP_NOT     shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    $default  reduce using rule 95 (assign_expr_list)

    function_call              go to state 74
    assign_expr_list           go to state 245
    nonempty_assign_expr_list  go to state 212
    assign_expr                go to state 213
    relop_expr                 go to state 214
    relop_term                 go to state 76
    relop_factor               go to state 77
    expr                       go to state 78
    term                       go to state 79
    factor                     go to state 80
    var_ref                    go to state 81


State 245

   81 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON $@11 relop_expr_list MK_SEMICOLON $@12 assign_expr_list . MK_RPAREN $@13 stmt

    MK_RPAREN  shift, and go to state 246


State 246

   81 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON $@11 relop_expr_list MK_SEMICOLON $@12 assign_expr_list MK_RPAREN . $@13 stmt

    $default  reduce using rule 80 ($@13)

    $@13  go to state 247


State 247

   81 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON $@11 relop_expr_list MK_SEMICOLON $@12 assign_expr_list MK_RPAREN $@13 . stmt

    ID            shift, and go to state 67
    CONST         shift, and go to state 68
    CONSTS        shift, and go to state 69
    CONSTF        shift, and go to state 70
    IF            shift, and go to state 174
    WHILE         shift, and go to state 175
    FOR           shift, and go to state 176
    OP_NOT        shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    MK_LPAREN     shift, and go to state 73
    MK_LBRACE     shift, and go to state 177
    MK_SEMICOLON  shift, and go to state 178
    RETURN        shift, and go to state 179

    MK_SEMICOLON  [reduce using rule 116 (relop_expr_list)]

    stmt                      go to state 248
    if_stmt                   go to state 184
    function_call             go to state 185
    relop_expr                go to state 143
    relop_term                go to state 76
    relop_factor              go to state 77
    relop_expr_list           go to state 186
    nonempty_relop_expr_list  go to state 145
    expr                      go to state 78
    term                      go to state 79
    factor                    go to state 80
    var_ref                   go to state 187


State 248

   81 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON $@11 relop_expr_list MK_SEMICOLON $@12 assign_expr_list MK_RPAREN $@13 stmt .

    $default  reduce using rule 81 (stmt)
